<?xml version="1.0"?>
<doc>
    <assembly>
        <name>lcmsNET</name>
    </assembly>
    <members>
        <member name="T:lcmsNET.Surround">
            <summary>
            Defines the surround(ing)s for a <see cref="T:lcmsNET.ViewingConditions"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.Surround.Average">
            <summary>
            Average for viewing surface colors.
            </summary>
        </member>
        <member name="F:lcmsNET.Surround.Dim">
            <summary>
            Dim for viewing televison.
            </summary>
        </member>
        <member name="F:lcmsNET.Surround.Dark">
            <summary>
            Dark for when using a projector in a dark room.
            </summary>
        </member>
        <member name="F:lcmsNET.Surround.CutSheet">
            <summary>
            Cut sheet.
            </summary>
        </member>
        <member name="T:lcmsNET.ViewingConditions">
            <summary>
            Defines the viewing conditions for a <see cref="T:lcmsNET.CAM02"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.ViewingConditions.whitePoint">
            <summary>
            The white point.
            </summary>
        </member>
        <member name="F:lcmsNET.ViewingConditions.Yb">
            <summary>
            Yb.
            </summary>
        </member>
        <member name="F:lcmsNET.ViewingConditions.La">
            <summary>
            La.
            </summary>
        </member>
        <member name="F:lcmsNET.ViewingConditions.surround">
            <summary>
            Surround.
            </summary>
        </member>
        <member name="F:lcmsNET.ViewingConditions.D_value">
            <summary>
            Degree of chromatic adaptation.
            </summary>
            <remarks>
            A value of -1 causes D to be calculated, otherwise specify in the range 0..1.0.
            </remarks>
        </member>
        <member name="T:lcmsNET.CAM02">
            <summary>
            Represents a CIE CAM02 color appearance model.
            </summary>
        </member>
        <member name="M:lcmsNET.CAM02.Create(lcmsNET.Context,lcmsNET.ViewingConditions@)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.CAM02"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="conditions">The viewing conditions.</param>
            <returns>A new <see cref="T:lcmsNET.CAM02"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.CAM02.Forward(lcmsNET.CIEXYZ@,lcmsNET.JCh@)">
            <summary>
            Evaluates the CAM02 model in the forward direction XYZ → JCh.
            </summary>
            <param name="xyz">The input XYZ value.</param>
            <param name="jch">Returns the JCh value.</param>
            <exception cref="T:System.ObjectDisposedException">
            The model has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.CAM02.Reverse(lcmsNET.JCh@,lcmsNET.CIEXYZ@)">
            <summary>
            Evaluates the CAM02 model in the reverse direction JCh → XYZ.
            </summary>
            <param name="jch">The input JCh value.</param>
            <param name="xyz">Returns the XYZ value.</param>
            <exception cref="T:System.ObjectDisposedException">
            The model has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.CAM02.ReleaseHandle">
            <summary>
            Frees the CAM02 handle.
            </summary>
        </member>
        <member name="T:lcmsNET.ErrorHandler">
            <summary>
            Defines a delegate that can be registered using <see cref="M:lcmsNET.Cms.SetErrorHandler(lcmsNET.ErrorHandler)"/>
            or <see cref="M:lcmsNET.Context.SetErrorHandler(lcmsNET.ErrorHandler)"/> to receive errors from Little CMS.
            </summary>
            <param name="contextID">The handle to the <see cref="T:lcmsNET.Context"/> from which the error is reported.</param>
            <param name="errorCode">The error code.</param>
            <param name="errorText">An english string containing the error text.</param>
            <remarks>
            A <see cref="T:lcmsNET.Context"/> value of <see cref="F:System.IntPtr.Zero"/> identifies the global context.
            </remarks>
        </member>
        <member name="T:lcmsNET.Intent">
            <summary>
            Defines ICC and non-ICC intents.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.Perceptual">
            <summary>
            Perceptual.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.RelativeColorimetric">
            <summary>
            Relative colorimetric.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.Saturation">
            <summary>
            Saturation.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.AbsoluteColorimetric">
            <summary>
            Absolute colorimetric.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.PreserveKOnlyPerceptual">
            <summary>
            Preserve K only perceptual.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.PreserveKOnlyRelativeColorimetric">
            <summary>
            Preserve K only relative colorimetric.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.PreserveKOnlySaturation">
            <summary>
            Preserve K only saturation.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.PreserveKPlanePerceptual">
            <summary>
            Preserve K plane perceptual.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.PreserveKPlaneRelativeColorimetric">
            <summary>
            Preserve K plane relative colorimetric.
            </summary>
        </member>
        <member name="F:lcmsNET.Intent.PreserveKPlaneSaturation">
            <summary>
            Preserve K plane saturation.
            </summary>
        </member>
        <member name="T:lcmsNET.CmsFlags">
            <summary>
            Defines flags to command the whole process.
            </summary>
            <remarks>
            To fine-tune control over the number of grid points, values can be
            logically ORed with (((n) &amp; 0xFF) &lt;&lt; 16).
            </remarks>
        </member>
        <member name="F:lcmsNET.CmsFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.NoCache">
            <summary>
            Inhibit 1-pixel cache.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.NoOptimize">
            <summary>
            Inhibit optimizations.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.NullTransform">
            <summary>
            Don't transform anyway.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.GamutCheck">
            <summary>
            Out of gamut alarm.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.SoftProofing">
            <summary>
            Do softproofing.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.BlackPointCompensation">
            <summary>
            Black point compensation.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.NoWhiteOnWhiteFixUp">
            <summary>
            Don't fix scum dot.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.HighResPreCalc">
            <summary>
            Use more memory to give better accuracy. Use on linear XYZ.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.LowResPreCalc">
            <summary>
            Use less memory to minimize resources.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.EightBitsDeviceLink">
            <summary>
            Create 8 bit device links.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.GuessDeviceClass">
            <summary>
            Guess device class (for transform2devicelink).
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.KeepSequence">
            <summary>
            Keep profile sequence for device link creation.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.ForceCLut">
            <summary>
            Force CLUT optimization.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.CLutPostLinearization">
            <summary>
            Create post-linearization tables if possible.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.CLutPreLinearization">
            <summary>
            Create pre-linearization tables if possible.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.NoNegatives">
            <summary>
            Prevent negative numbers in floating point transforms.
            </summary>
        </member>
        <member name="F:lcmsNET.CmsFlags.NoDefaultResourceDef">
            <summary>
            No default resource definition.
            </summary>
        </member>
        <member name="T:lcmsNET.PixelType">
            <summary>
            Defines the pixel types.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.Any">
            <summary>
            Don't check color space.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.Gray">
            <summary>
            Grayscale.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.RGB">
            <summary>
            Red Green Blue.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.CMY">
            <summary>
            Cyan Magenta Yellow.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.CMYK">
            <summary>
            Cyan Magenta Yellow blacK.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.YCbCr">
            <summary>
            Y Cb Cr.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.YUV">
            <summary>
            L u'v'.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.XYZ">
            <summary>
            CIE XYZ.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.Lab">
            <summary>
            CIE L*a*b.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.YUVK">
            <summary>
            L u'v'K.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.HSV">
            <summary>
            H S V.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.HLS">
            <summary>
            H L S.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.Yxy">
            <summary>
            Y x y.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH1">
            <summary>
            1 unspecified channel.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH2">
            <summary>
            2 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH3">
            <summary>
            3 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH4">
            <summary>
            4 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH5">
            <summary>
            5 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH6">
            <summary>
            6 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH7">
            <summary>
            7 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH8">
            <summary>
            8 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH9">
            <summary>
            9 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH10">
            <summary>
            10 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH11">
            <summary>
            11 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH12">
            <summary>
            12 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH13">
            <summary>
            13 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH14">
            <summary>
            14 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.MCH15">
            <summary>
            15 unspecified channels.
            </summary>
        </member>
        <member name="F:lcmsNET.PixelType.LabV2">
            <summary>
            Identical to <see cref="F:lcmsNET.PixelType.Lab"/> but using the V2 old encoding.
            </summary>
        </member>
        <member name="T:lcmsNET.TagSignature">
            <summary>
            Defines the base ICC tag definitions.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.AToB0">
            <summary>
            'A2B0' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.AToB1">
            <summary>
            'A2B1' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.AToB2">
            <summary>
            'A2B2' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BlueColorant">
            <summary>
            'bXYZ' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BlueMatrixColumn">
            <summary>
            'bXYZ' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BlueTRC">
            <summary>
            'bTRC' - read/write using <see cref="T:lcmsNET.ToneCurve"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToA0">
            <summary>
            'B2A0' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToA1">
            <summary>
            'B2A1' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToA2">
            <summary>
            'B2A2' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.CalibrationDateTime">
            <summary>
            'calt' - read/write using <see cref="T:lcmsNET.Tm"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.CharTarget">
            <summary>
            'targ' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ChromaticAdaptation">
            <summary>
            'chad' - read/write using <see cref="T:lcmsNET.CIEXYZTRIPLE"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Chromaticity">
            <summary>
            'chrm' - read/write using <see cref="T:lcmsNET.CIExyYTRIPLE"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ColorantOrder">
            <summary>
            'clro' - read/write using <see cref="T:lcmsNET.ColorantOrder"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ColorantTable">
            <summary>
            'clrt' - read/write using <see cref="T:lcmsNET.NamedColorList"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ColorantTableOut">
            <summary>
            'clot' - read/write using <see cref="T:lcmsNET.NamedColorList"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ColorimetricIntentImageState">
            <summary>
            'ciis' - read/write using <see cref="T:lcmsNET.Signature"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Copyright">
            <summary>
            'cprt' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.CrdInfo">
            <summary>
            'crdi' - read/write using <see cref="T:lcmsNET.NamedColorList"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Data">
            <summary>
            'data' - Not supported.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DateTime">
            <summary>
            'dtim' - read/write using <see cref="T:lcmsNET.Tm"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DeviceMfgDesc">
            <summary>
            'dmnd' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DeviceModelDesc">
            <summary>
            'dmdd' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DeviceSettings">
            <summary>
            'devs' - Not supported.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DToB0">
            <summary>
            'D2B0' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DToB1">
            <summary>
            'D2B1' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DToB2">
            <summary>
            'D2B2' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.DToB3">
            <summary>
            'D2B3' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToD0">
            <summary>
            'B2D0' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToD1">
            <summary>
            'B2D1' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToD2">
            <summary>
            'B2D2' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.BToD3">
            <summary>
            'B2D3' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Gamut">
            <summary>
            'gamt' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.GrayTRC">
            <summary>
            'kTRC' - read/write using <see cref="T:lcmsNET.ToneCurve"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.GreenColorant">
            <summary>
            'gXYZ' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.GreenMatrixColumn">
            <summary>
            'gXYZ' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.GreenTRC">
            <summary>
            'gTRC' - read/write using <see cref="T:lcmsNET.ToneCurve"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Luminance">
            <summary>
            'lumi' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Measurement">
            <summary>
            'meas' - read/write using <see cref="T:lcmsNET.ICCMeasurementConditions"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.MediaBlackPoint">
            <summary>
            'bkpt' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.MediaWhitePoint">
            <summary>
            'wtpt' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.NamedColor">
            <summary>
            'ncol' - Not supported.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.NamedColor2">
            <summary>
            'ncl2' - read/write using <see cref="T:lcmsNET.NamedColorList"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.OutputResponse">
            <summary>
            'resp' - Not supported.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.PerceptualRenderingIntentGamut">
            <summary>
            'rig0' - read/write using <see cref="T:lcmsNET.Signature"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Preview0">
            <summary>
            'pre0' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Preview1">
            <summary>
            'pre1' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Preview2">
            <summary>
            'pre2' - read/write using <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ProfileDescription">
            <summary>
            'desc' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ProfileDescriptionML">
            <summary>
            'dscm' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ProfileSequenceDesc">
            <summary>
            'pseq' - read/write using <see cref="T:lcmsNET.ProfileSequenceDescriptor"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ProfileSequenceId">
            <summary>
            'psid' - read/write using <see cref="T:lcmsNET.ProfileSequenceDescriptor"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Ps2CRD0">
            <summary>
            'psd0' - read/write using <see cref="T:lcmsNET.ICCData"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Ps2CRD1">
            <summary>
            'psd1' - read/write using <see cref="T:lcmsNET.ICCData"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Ps2CRD2">
            <summary>
            'psd2' - read/write using <see cref="T:lcmsNET.ICCData"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Ps2CRD3">
            <summary>
            'psd3' - read/write using <see cref="T:lcmsNET.ICCData"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Ps2CSA">
            <summary>
            'ps2s' - read/write using <see cref="T:lcmsNET.ICCData"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Ps2RenderingIntent">
            <summary>
            'ps2i' - read/write using <see cref="T:lcmsNET.ICCData"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.RedColorant">
            <summary>
            'rXYZ' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.RedMatrixColumn">
            <summary>
            'rXYZ' - read/write using <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.RedTRC">
            <summary>
            'rTRC' - read/write using <see cref="T:lcmsNET.ToneCurve"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.SaturationRenderingIntentGamut">
            <summary>
            'rig2' - read/write using <see cref="T:lcmsNET.Signature"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ScreeningDesc">
            <summary>
            'scrd' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Screening">
            <summary>
            'scrn' - read/write using <see cref="T:lcmsNET.Screening"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Technology">
            <summary>
            'tech' - read/write using <see cref="T:lcmsNET.Signature"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.UcrBg">
            <summary>
            'bfd ' - read/write using <see cref="T:lcmsNET.UcrBg"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ViewingCondDesc">
            <summary>
            'vued' - read/write using <see cref="T:lcmsNET.MultiLocalizedUnicode"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ViewingConditions">
            <summary>
            'view' - read/write using <see cref="T:lcmsNET.ICCViewingConditions"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Vcgt">
            <summary>
            'vcgt' - read/write using <see cref="T:lcmsNET.VideoCardGamma"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Meta">
            <summary>
            'meta' - read/write using <see cref="T:lcmsNET.Dict"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.Cicp">
            <summary>
            'cicp' - read/write using <see cref="T:lcmsNET.VideoSignalType"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.ArgyllArts">
            <summary>
            'arts' - read/write using <see cref="T:lcmsNET.CIEXYZTRIPLE"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.TagSignature.MHC2">
            <summary>
            'MHC2' read/write using <see cref="T:lcmsNET.MHC2"/>.
            </summary>
        </member>
        <member name="T:lcmsNET.TagTypeSignature">
            <summary>
            Defines the base ICC type definitions.
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Chromaticity">
            <summary>
            'chrm'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Cicp">
            <summary>
            'cicp'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ColorantOrder">
            <summary>
            'clro'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ColorantTable">
            <summary>
            'clrt'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.CrdInfo">
            <summary>
            'crdi'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Curve">
            <summary>
            'curv'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Data">
            <summary>
            'data'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Dict">
            <summary>
            'dict'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.DateTime">
            <summary>
            'dtim'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.DeviceSettings">
            <summary>
            'devs'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Lut16">
            <summary>
            'mft2'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Lut8">
            <summary>
            'mft1'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.LutAtoB">
            <summary>
            'mAB '
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.LutBtoA">
            <summary>
            'mBA '
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Measurement">
            <summary>
            'meas'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.MultiLocalizedUnicode">
            <summary>
            'mluc'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.MultiProcessElement">
            <summary>
            'mpet'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.NamedColor">
            <summary>
            'ncol' -- DEPRECATED!
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.NamedColor2">
            <summary>
            'ncl2'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ParametricCurve">
            <summary>
            'para'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ProfileSequenceDesc">
            <summary>
            'pseq'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ProfileSequenceId">
            <summary>
            'psid'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ResponseCurveSet16">
            <summary>
            'rcs2'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.S15Fixed16Array">
            <summary>
            'sf32'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Screening">
            <summary>
            'scrn'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Signature">
            <summary>
            'sig '
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Text">
            <summary>
            'text'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.TextDescription">
            <summary>
            'desc'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.U16Fixed16Array">
            <summary>
            'uf32'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.UcrBg">
            <summary>
            'bfd '
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.UInt16Array">
            <summary>
            'ui16'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.UInt32Array">
            <summary>
            'ui32'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.UInt64Array">
            <summary>
            'ui64'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.UInt8Array">
            <summary>
            'ui08'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.Vcgt">
            <summary>
            'vcgt'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.ViewingConditions">
            <summary>
            'view'
            </summary>
        </member>
        <member name="F:lcmsNET.TagTypeSignature.XYZ">
            <summary>
            'XYZ '
            </summary>
        </member>
        <member name="T:lcmsNET.ColorSpaceSignature">
            <summary>
            Defines the ICC color spaces.
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.XYZData">
            <summary>
            'XYZ '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.LabData">
            <summary>
            'Lab '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.LuvData">
            <summary>
            'Luv '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.YCbCrData">
            <summary>
            'YCbr'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.YxyData">
            <summary>
            'Yxy '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.RgbData">
            <summary>
            'RGB '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.GrayData">
            <summary>
            'GRAY'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.HsvData">
            <summary>
            'HSV '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.HlsData">
            <summary>
            'HLS '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.CmykData">
            <summary>
            'CMYK'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.CmyData">
            <summary>
            'CMY '
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH1Data">
            <summary>
            'MCH1'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH2Data">
            <summary>
            'MCH2'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH3Data">
            <summary>
            'MCH3'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH4Data">
            <summary>
            'MCH4'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH5Data">
            <summary>
            'MCH5'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH6Data">
            <summary>
            'MCH6'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH7Data">
            <summary>
            'MCH7'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH8Data">
            <summary>
            'MCH8'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCH9Data">
            <summary>
            'MCH9'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCHAData">
            <summary>
            'MCHA'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCHBData">
            <summary>
            'MCHB'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCHCData">
            <summary>
            'MCHC'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCHDData">
            <summary>
            'MCHD'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCHEData">
            <summary>
            'MCHE'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.MCHFData">
            <summary>
            'MCHF'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.NamedData">
            <summary>
            'nmcl'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._1colorData">
            <summary>
            '1CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._2colorData">
            <summary>
            '2CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._3colorData">
            <summary>
            '3CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._4colorData">
            <summary>
            '4CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._5colorData">
            <summary>
            '5CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._6colorData">
            <summary>
            '6CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._7colorData">
            <summary>
            '7CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._8colorData">
            <summary>
            '8CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._9colorData">
            <summary>
            '9CLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._10colorData">
            <summary>
            'ACLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._11colorData">
            <summary>
            'BCLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._12colorData">
            <summary>
            'CCLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._13colorData">
            <summary>
            'DCLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._14colorData">
            <summary>
            'ECLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature._15colorData">
            <summary>
            'FCLR'
            </summary>
        </member>
        <member name="F:lcmsNET.ColorSpaceSignature.LuvKData">
            <summary>
            'LuvK'
            </summary>
        </member>
        <member name="T:lcmsNET.ProfileClassSignature">
            <summary>
            Defines the ICC profile class.
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.Input">
            <summary>
            'scnr'
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.Display">
            <summary>
            'mntr'
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.Output">
            <summary>
            'prtr'
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.Link">
            <summary>
            'link'
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.Abstract">
            <summary>
            'abst'
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.ColorSpace">
            <summary>
            'spac'
            </summary>
        </member>
        <member name="F:lcmsNET.ProfileClassSignature.NamedColor">
            <summary>
            'nmcl'
            </summary>
        </member>
        <member name="T:lcmsNET.TechnologySignature">
            <summary>
            Defines the ICC technology tag.
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.DigitalCamera">
            <summary>
            'dcam'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.FilmScanner">
            <summary>
            'fscn'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.ReflectiveScanner">
            <summary>
            'rscn'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.InkJetPrinter">
            <summary>
            'ijet'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.ThermalWaxPrinter">
            <summary>
            'twax'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.ElectrophotographicPrinter">
            <summary>
            'epho'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.ElectrostaticPrinter">
            <summary>
            'esta'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.DyeSublimationPrinter">
            <summary>
            'dsub'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.PhotographicPaperPrinter">
            <summary>
            'rpho'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.FilmWriter">
            <summary>
            'fprn'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.VideoMonitor">
            <summary>
            'vidm'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.VideoCamera">
            <summary>
            'vidc'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.ProjectionTelevision">
            <summary>
            'pjtv'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.CRTDisplay">
            <summary>
            'CRT '
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.PMDisplay">
            <summary>
            'PMD '
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.AMDisplay">
            <summary>
            'AMD '
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.PhotoCD">
            <summary>
            'KPCD'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.PhotoImageSetter">
            <summary>
            'imgs'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.Gravure">
            <summary>
            'grav'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.OffsetLithography">
            <summary>
            'offs'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.Silkscreen">
            <summary>
            'silk'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.Flexography">
            <summary>
            'flex'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.MotionPictureFilmScanner">
            <summary>
            'mpfs'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.MotionPictureFilmRecorder">
            <summary>
            'mpfr'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.DigitalMotionPictureCamera">
            <summary>
            'dmpc'
            </summary>
        </member>
        <member name="F:lcmsNET.TechnologySignature.DigitalCinemaProjector">
            <summary>
            'dcpj'
            </summary>
        </member>
        <member name="T:lcmsNET.PlatformSignature">
            <summary>
            Defines the ICC platforms.
            </summary>
        </member>
        <member name="F:lcmsNET.PlatformSignature.Macintosh">
            <summary>
            'APPL'
            </summary>
        </member>
        <member name="F:lcmsNET.PlatformSignature.Microsoft">
            <summary>
            'MSFT'
            </summary>
        </member>
        <member name="F:lcmsNET.PlatformSignature.Solaris">
            <summary>
            'SUNW'
            </summary>
        </member>
        <member name="F:lcmsNET.PlatformSignature.SGI">
            <summary>
            'SGI '
            </summary>
        </member>
        <member name="F:lcmsNET.PlatformSignature.Taligent">
            <summary>
            'TGNT'
            </summary>
        </member>
        <member name="F:lcmsNET.PlatformSignature.Unices">
            <summary>
            '*nix' - From argyll -- Not official
            </summary>
        </member>
        <member name="T:lcmsNET.StageSignature">
            <summary>
            Defines the multi process element types.
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.CurveSetElemType">
            <summary>
            'cvst'
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.MatrixElemType">
            <summary>
            'matf'
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.CLutElemType">
            <summary>
            'clut'
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.BAcsElemType">
            <summary>
            'bACS'
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.EAcsElemType">
            <summary>
            'eACS'
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.XYZ2LabElemType">
            <summary>
            'l2x '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.Lab2XYZElemType">
            <summary>
            'x2l '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.NamedColorElemType">
            <summary>
            'ncl '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.LabV2toV4">
            <summary>
            '2 4 '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.LabV4toV2">
            <summary>
            '4 2 '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.IdentityElemType">
            <summary>
            'idn '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.Lab2FloatPCS">
            <summary>
            'd2l '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.FloatPCS2Lab">
            <summary>
            'l2d '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.XYZ2FloatPCS">
            <summary>
            'd2x '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.FloatPCS2XYZ">
            <summary>
            'x2d '
            </summary>
        </member>
        <member name="F:lcmsNET.StageSignature.ClipNegativesElemType">
            <summary>
            'clp '
            </summary>
        </member>
        <member name="T:lcmsNET.CurveSegSignature">
            <summary>
            Defines the types of curve elements.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegSignature.FormulaCurveSeg">
            <summary>
            'parf'
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegSignature.SampledCurveSeg">
            <summary>
            'samf'
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegSignature.SegmentedCurve">
            <summary>
            'curf'
            </summary>
        </member>
        <member name="T:lcmsNET.InfoType">
            <summary>
            Localized information.
            </summary>
        </member>
        <member name="F:lcmsNET.InfoType.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="F:lcmsNET.InfoType.Manufacturer">
            <summary>
            Manufacturer.
            </summary>
        </member>
        <member name="F:lcmsNET.InfoType.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="F:lcmsNET.InfoType.Copyright">
            <summary>
            Copyright.
            </summary>
        </member>
        <member name="T:lcmsNET.DeviceAttributes">
            <summary>
            Defines the device attributes, correspond to the low 4 bytes of the 8 bytes attribute quantity.
            </summary>
        </member>
        <member name="F:lcmsNET.DeviceAttributes.Reflective">
            <summary>
            Reflective.
            </summary>
        </member>
        <member name="F:lcmsNET.DeviceAttributes.Transparency">
            <summary>
            Transparency.
            </summary>
        </member>
        <member name="F:lcmsNET.DeviceAttributes.Glossy">
            <summary>
            Glossy.
            </summary>
        </member>
        <member name="F:lcmsNET.DeviceAttributes.Matte">
            <summary>
            Matte.
            </summary>
        </member>
        <member name="T:lcmsNET.UsedDirection">
            <summary>
            Defines the directions used for a CLUT in a profile.
            </summary>
        </member>
        <member name="F:lcmsNET.UsedDirection.AsInput">
            <summary>
            Used as input.
            </summary>
        </member>
        <member name="F:lcmsNET.UsedDirection.AsOutput">
            <summary>
            Used as output.
            </summary>
        </member>
        <member name="F:lcmsNET.UsedDirection.AsProof">
            <summary>
            Used as proof.
            </summary>
        </member>
        <member name="T:lcmsNET.PostScriptResourceType">
            <summary>
            Defines the PostScript resource types.
            </summary>
        </member>
        <member name="F:lcmsNET.PostScriptResourceType.ColorSpaceArray">
            <summary>
            Color space array.
            </summary>
        </member>
        <member name="F:lcmsNET.PostScriptResourceType.ColorRenderingDictionary">
            <summary>
            Color rendering dictionary.
            </summary>
        </member>
        <member name="T:lcmsNET.Observer">
            <summary>
            Defines the standard observer encodings.
            </summary>
        </member>
        <member name="F:lcmsNET.Observer.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:lcmsNET.Observer.CIE1931">
            <summary>
            CIE 1931 standard colorimetric observer.
            </summary>
        </member>
        <member name="F:lcmsNET.Observer.CIE1964">
            <summary>
            CIE 1964 standard colorimetric observer.
            </summary>
        </member>
        <member name="T:lcmsNET.MeasurementGeometry">
            <summary>
            Defines the measurement geometry encodings.
            </summary>
        </member>
        <member name="F:lcmsNET.MeasurementGeometry.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:lcmsNET.MeasurementGeometry.ZeroFortyFiveOrFortyFiveZero">
            <summary>
            0°:45° or 45°:0°
            </summary>
        </member>
        <member name="F:lcmsNET.MeasurementGeometry.ZeroDOrDZero">
            <summary>
            0°:d or d:0°.
            </summary>
        </member>
        <member name="T:lcmsNET.IlluminantType">
            <summary>
            Defines the standard illuminant encodings.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.Unknown">
            <summary>
            Unknown illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.D50">
            <summary>
            D50 illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.D65">
            <summary>
            D65 illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.D93">
            <summary>
            D93 illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.F2">
            <summary>
            F2 illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.D55">
            <summary>
            D55 illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.A">
            <summary>
            A illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.E">
            <summary>
            Equi-Power (E) illuminant.
            </summary>
        </member>
        <member name="F:lcmsNET.IlluminantType.F8">
            <summary>
            F8 illuminant.
            </summary>
        </member>
        <member name="T:lcmsNET.ICCMeasurementConditions">
            <summary>
            Defines a measurement specification.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCMeasurementConditions.Observer">
            <summary>
            The standard observer.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCMeasurementConditions.Backing">
            <summary>
            <see cref="T:lcmsNET.CIEXYZ"/> tristimulus values for measurement backing.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCMeasurementConditions.Geometry">
            <summary>
            The measurement geometry.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCMeasurementConditions.Flare">
            <summary>
            The measurement flare in the range 0 (0%) to 1.0 (100%).
            </summary>
        </member>
        <member name="F:lcmsNET.ICCMeasurementConditions.IlluminantType">
            <summary>
            The standard illuminant type.
            </summary>
        </member>
        <member name="M:lcmsNET.ICCMeasurementConditions.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.ICCMeasurementConditions"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.ICCMeasurementConditions"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.ICCViewingConditions">
            <summary>
            Defines a set of viewing conditions.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCViewingConditions.IlluminantXYZ">
            <summary>
            Un-normalized CIEXYZ values for illuminant (in which Y is in cd/m²).
            </summary>
        </member>
        <member name="F:lcmsNET.ICCViewingConditions.SurroundXYZ">
            <summary>
            Un-normalized CIEXYZ values for surround (in which Y is in cd/m²).
            </summary>
        </member>
        <member name="F:lcmsNET.ICCViewingConditions.IlluminantType">
            <summary>
            The standard illuminant type.
            </summary>
        </member>
        <member name="M:lcmsNET.ICCViewingConditions.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.ICCViewingConditions"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.ICCViewingConditions"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.VideoSignalType">
            <summary>
            Defines a video signal type.
            </summary>
            <remarks>
            See recommendation ITU-T H.273 (ISO/IEC 23091-2).
            </remarks>
        </member>
        <member name="F:lcmsNET.VideoSignalType.ColourPrimaries">
            <summary>
            Colour primaries code point.
            </summary>
        </member>
        <member name="F:lcmsNET.VideoSignalType.TransferCharacteristics">
            <summary>
            Transfer characteristics code point.
            </summary>
        </member>
        <member name="F:lcmsNET.VideoSignalType.MatrixCoefficients">
            <summary>
            Matrix coefficients code point.
            </summary>
        </member>
        <member name="F:lcmsNET.VideoSignalType.VideoFullRangeFlag">
            <summary>
            Scaling and offsets values applied in association with <see cref="F:lcmsNET.VideoSignalType.MatrixCoefficients"/>.
            </summary>
        </member>
        <member name="M:lcmsNET.VideoSignalType.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.VideoSignalType"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.VideoSignalType"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.Cms">
            <summary>
            Defines static constants, properties and utility methods.
            </summary>
        </member>
        <member name="P:lcmsNET.Cms.EncodedCMMVersion">
            <summary>
            Gets the value of the LCMS_VERSION constant defined in the lcms.h header file.
            </summary>
            <remarks>
            Requires Little CMS version 2.8 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Cms.SetErrorHandler(lcmsNET.ErrorHandler)">
            <summary>
            Sets the error handler for the global context.
            </summary>
            <param name="handler">The error handler to be set or null to reset to default.</param>
            <remarks>
            The default error handler does nothing.
            </remarks>
        </member>
        <member name="M:lcmsNET.Cms.ToColorSpaceSignature(lcmsNET.PixelType)">
            <summary>
            Converts a <see cref="T:lcmsNET.PixelType"/> to a <see cref="T:lcmsNET.ColorSpaceSignature"/>.
            </summary>
            <param name="pixelType">The <see cref="T:lcmsNET.PixelType"/> to be converted.</param>
            <returns>The equivalent <see cref="T:lcmsNET.ColorSpaceSignature"/>.</returns>
        </member>
        <member name="M:lcmsNET.Cms.ToPixelType(lcmsNET.ColorSpaceSignature)">
            <summary>
            Converts a <see cref="T:lcmsNET.ColorSpaceSignature"/> to a <see cref="T:lcmsNET.PixelType"/>.
            </summary>
            <param name="space">The <see cref="T:lcmsNET.ColorSpaceSignature"/> to be converted.</param>
            <returns>The equivalent <see cref="T:lcmsNET.PixelType"/>.</returns>
        </member>
        <member name="M:lcmsNET.Cms.ChannelsOf(lcmsNET.ColorSpaceSignature)">
            <summary>
            Gets the channel count for a <see cref="T:lcmsNET.ColorSpaceSignature"/>.
            </summary>
            <param name="space">The <see cref="T:lcmsNET.ColorSpaceSignature"/>.</param>
            <returns>The number of channels.</returns>
        </member>
        <member name="M:lcmsNET.Cms.WhitePointFromTemp(lcmsNET.CIExyY@,System.Double)">
            <summary>
            Correlates a black body chromaticity from a given temperature in °K.
            </summary>
            <param name="xyY">On return contains the resulting chromaticity.</param>
            <param name="tempK">The temperature in °K.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.Cms.TempFromWhitePoint(System.Double@,lcmsNET.CIExyY@)">
            <summary>
            Correlates a black body temperature in °K from a given chromaticity.
            </summary>
            <param name="tempK">On return contains the resulting temperature in °K.</param>
            <param name="xyY">The target chromaticity.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="P:lcmsNET.Cms.AlarmCodes">
            <summary>
            Gets or sets the codes used to mark out-of-gamut on proofing transforms
            for the global context.
            </summary>
            <value>
            An array of 16 values.
            </value>
        </member>
        <member name="P:lcmsNET.Cms.AdaptationState">
            <summary>
            Gets or sets the adaptation state for absolute colorimetric intent for the global context.
            </summary>
            <value>
            <list type="bullet">
            <item>d = Degree on adaptation.</item>
            <item>0 = Not adapted.</item>
            <item>1 = Complete adaptation.</item>
            <item>in-between = Partial adaptation.</item>
            </list>
            </value>
            <remarks>
            Ignored for transforms created using
            <see cref="M:lcmsNET.Transform.Create(lcmsNET.Context,lcmsNET.Profile[],System.Boolean[],lcmsNET.Intent[],System.Double[],lcmsNET.Profile,System.Int32,System.UInt32,System.UInt32,lcmsNET.CmsFlags)"/>.
            </remarks>
        </member>
        <member name="P:lcmsNET.Cms.SupportedIntents">
            <summary>
            Gets the collection of all supported intents.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_8">
            <summary>
            Grayscale 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_8_REV">
            <summary>
            Grayscale 8 bits, reversed formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_16">
            <summary>
            Grayscale 16 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_16_REV">
            <summary>
            Grayscale 16 bits, reversed formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_16_SE">
            <summary>
            Grayscale 16 bits, swapped-endian formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAYA_8">
            <summary>
            Grayscale + ignored alpha 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAYA_16">
            <summary>
            Grayscale + ignored alpha 16 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAYA_16_SE">
            <summary>
            Grayscale + ignored alpha 16 bits, swapped-endian formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAYA_8_PLANAR">
            <summary>
            Grayscale 8 bits, single plane formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAYA_16_PLANAR">
            <summary>
            Grayscale 16 bits, single plane formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_8">
            <summary>
            RGB 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_8_PLANAR">
            <summary>
            RGB 8 bits, stored as contiguous planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_8">
            <summary>
            BGR 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_8_PLANAR">
            <summary>
            BGR 8 bits, stored as contiguous planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_16">
            <summary>
            RGB 16 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_16_PLANAR">
            <summary>
            RGB 16 bits, stored as contiguous planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_16_SE">
            <summary>
            RGB 16 bits, swapped-endian formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_16">
            <summary>
            BGR 16 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_16_PLANAR">
            <summary>
            BGR 16 bits, stored as contiguous planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_16_SE">
            <summary>
            BGR 16 bits, swapped-endian formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_8">
            <summary>
            RGB 8 bits plus an Alpha channel (which is ignored) formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_8_PLANAR">
            <summary>
            RGBA 8 bits, stored as contiguous planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_16">
            <summary>
            RGB 16 bits plus an Alpha channel (which is ignored) formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_16_PLANAR">
            <summary>
            RGBA 16 bits, stored as contiguous planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_16_SE">
            <summary>
            RGBA 16 bits, swapped-endian formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ARGB_8">
            <summary>
            An ignored Alpha channel plus RGB in 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ARGB_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ARGB_16">
            <summary>
            An ignored Alpha channel plus RGB in 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_8">
            <summary>
            An ignored Alpha channel plus BGR in 8 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_8_PLANAR">
            <summary>
            An ignored Alpha channel plus BGR in separate 8 bit planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_16">
            <summary>
            An ignored Alpha channel plus BGR in 16 bits formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_16_PLANAR">
            <summary>
            An ignored Alpha channel plus BGR in separate 16 bit planes formatter.
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGRA_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGRA_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGRA_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGRA_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMY_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMY_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMY_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMY_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMY_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYKA_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_8_REV">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUVK_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_16_REV">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUVK_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KCMY_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KCMY_8_REV">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KCMY_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KCMY_16_REV">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KCMY_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK5_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK5_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK5_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC5_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC5_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC5_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK6_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK6_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK6_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK6_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK6_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK7_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK7_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK7_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC7_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC7_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC7_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK8_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK8_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK8_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC8_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC8_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC8_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK9_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK9_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK9_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC9_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC9_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC9_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK10_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK10_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK10_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC10_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC10_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC10_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK11_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK11_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK11_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC11_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC11_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC11_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK12_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK12_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK12_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC12_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC12_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_KYMC12_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_XYZ_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_Lab_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_LabV2_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ALab_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ALabV2_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_Lab_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_LabV2_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_Yxy_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YCbCr_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YCbCr_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YCbCr_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YCbCr_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YCbCr_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUV_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUV_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUV_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUV_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_YUV_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HLS_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HLS_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HLS_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HLS_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HLS_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HSV_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HSV_8_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HSV_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HSV_16_PLANAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_HSV_16_SE">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_NAMED_COLOR_INDEX">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_XYZ_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_Lab_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_LabA_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ARGB_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGRA_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_XYZ_DBL">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_Lab_DBL">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_DBL">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_DBL">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_DBL">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_DBL">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_GRAY_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGB_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_RGBA_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_CMYK_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ARGB_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGR_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_BGRA_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.TYPE_ABGR_HALF_FLT">
            <summary>
            
            </summary>
        </member>
        <member name="F:lcmsNET.Cms.PluginMagicNumber">
            <summary>
            Identifies a structure as a Little CMS 2 plug-in.
            </summary>
        </member>
        <member name="T:lcmsNET.ColorantOrder">
            <summary>
            Represents the laydown order that colorants will be printed on an n-colorant device.
            </summary>
        </member>
        <member name="M:lcmsNET.ColorantOrder.#ctor(System.Byte[])">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.ColorantOrder"/> class.
            </summary>
            <param name="bytes">An array of 16 values.</param>
        </member>
        <member name="M:lcmsNET.ColorantOrder.op_Implicit(lcmsNET.ColorantOrder)~System.Byte[]">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.ColorantOrder"/> to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="colorantOrder">The <see cref="T:lcmsNET.ColorantOrder"/> to be converted.</param>
        </member>
        <member name="M:lcmsNET.ColorantOrder.op_Explicit(System.Byte[])~lcmsNET.ColorantOrder">
            <summary>
            Explicitly converts a <see cref="T:System.Byte"/> array of 16 values to a <see cref="T:lcmsNET.ColorantOrder"/>.
            </summary>
            <param name="bytes">The byte array to be converted.</param>
        </member>
        <member name="M:lcmsNET.ColorantOrder.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.ColorantOrder"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.ColorantOrder"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.CIEXYZ">
            <summary>
            Represents an XYZ tristimulus value.
            </summary>
        </member>
        <member name="F:lcmsNET.CIEXYZ.X">
            <summary>
            XYZ X.
            </summary>
        </member>
        <member name="F:lcmsNET.CIEXYZ.Y">
            <summary>
            XYZ Y.
            </summary>
        </member>
        <member name="F:lcmsNET.CIEXYZ.Z">
            <summary>
            XYZ Z.
            </summary>
        </member>
        <member name="M:lcmsNET.CIEXYZ.ToLab(lcmsNET.CIEXYZ@)">
            <summary>
            Converts the value to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="whitePoint">The white point to be used in the conversion.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="P:lcmsNET.CIEXYZ.D50">
            <summary>
            Gets the D50 white point in XYZ.
            </summary>
        </member>
        <member name="M:lcmsNET.CIEXYZ.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.CIEXYZ"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.CIEXYZ"/> instance.</returns>
        </member>
        <member name="M:lcmsNET.CIEXYZ.op_Implicit(lcmsNET.CIEXYZ@)~lcmsNET.CIExyY">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.CIEXYZ"/> value to <see cref="T:lcmsNET.CIExyY"/>.
            </summary>
            <param name="xyz">The <see cref="T:lcmsNET.CIEXYZ"/> value to be converted.</param>
        </member>
        <member name="T:lcmsNET.CIExyY">
            <summary>
            Represents an xyY tristimulus value.
            </summary>
        </member>
        <member name="F:lcmsNET.CIExyY.x">
            <summary>
            xyY x.
            </summary>
        </member>
        <member name="F:lcmsNET.CIExyY.y">
            <summary>
            xyY y.
            </summary>
        </member>
        <member name="F:lcmsNET.CIExyY.Y">
            <summary>
            xyY Y.
            </summary>
        </member>
        <member name="P:lcmsNET.CIExyY.D50">
            <summary>
            Gets the D50 white point in xyY.
            </summary>
        </member>
        <member name="M:lcmsNET.CIExyY.op_Implicit(lcmsNET.CIExyY@)~lcmsNET.CIEXYZ">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.CIExyY"/> value to <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
            <param name="xyY">The <see cref="T:lcmsNET.CIExyY"/> value to be converted.</param>
        </member>
        <member name="T:lcmsNET.CIELab">
            <summary>
            Represents a CIELAB tristimulus value.
            </summary>
        </member>
        <member name="F:lcmsNET.CIELab.L">
            <summary>
            CIELAB L* lightness value.
            </summary>
            <remarks>
            Black is 0 and white is 100.
            </remarks>
        </member>
        <member name="F:lcmsNET.CIELab.a">
            <summary>
            CIELAB a axis value representing the green-red opponent colors.
            </summary>
            <remarks>
            Negative values are towards green and positive values towards red.
            </remarks>
        </member>
        <member name="F:lcmsNET.CIELab.b">
            <summary>
            CIELAB b axis value representing the blue-yellow opponent colors.
            </summary>
            <remarks>
            Negative values are towards blue and positive values towards yellow.
            </remarks>
        </member>
        <member name="M:lcmsNET.CIELab.ToXYZ(lcmsNET.CIEXYZ@)">
            <summary>
            Converts the value to <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
            <param name="whitePoint">The white point to be used in the conversion.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIEXYZ"/> value.</returns>
        </member>
        <member name="M:lcmsNET.CIELab.op_Implicit(lcmsNET.CIELab@)~lcmsNET.CIELCh">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.CIELab"/> value to <see cref="T:lcmsNET.CIELCh"/>.
            </summary>
            <param name="lab">The <see cref="T:lcmsNET.CIELab"/> value to be converted.</param>
        </member>
        <member name="T:lcmsNET.CIELCh">
            <summary>
            Represents a CIELCh tristimulus value.
            </summary>
        </member>
        <member name="F:lcmsNET.CIELCh.L">
            <summary>
            CIELCh L lightness value.
            </summary>
        </member>
        <member name="F:lcmsNET.CIELCh.C">
            <summary>
            CIELCh C chroma value.
            </summary>
        </member>
        <member name="F:lcmsNET.CIELCh.h">
            <summary>
            CIELCh h hue value.
            </summary>
        </member>
        <member name="M:lcmsNET.CIELCh.op_Implicit(lcmsNET.CIELCh@)~lcmsNET.CIELab">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.CIELCh"/> value to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="lch">The <see cref="T:lcmsNET.CIELCh"/> value to be converted.</param>
        </member>
        <member name="T:lcmsNET.JCh">
            <summary>
            Represents a CIE CAM02 JCh tristimulus value.
            </summary>
        </member>
        <member name="F:lcmsNET.JCh.J">
            <summary>
            CIE CAM02 J lightness value.
            </summary>
        </member>
        <member name="F:lcmsNET.JCh.C">
            <summary>
            CIE CAM02 C chroma value.
            </summary>
        </member>
        <member name="F:lcmsNET.JCh.h">
            <summary>
            CIE CAM02 h hue value.
            </summary>
        </member>
        <member name="T:lcmsNET.CIEXYZTRIPLE">
            <summary>
            Represents a triple of CIEXYZ values.
            </summary>
        </member>
        <member name="F:lcmsNET.CIEXYZTRIPLE.Red">
            <summary>
            The CIEXYZ Red component.
            </summary>
        </member>
        <member name="F:lcmsNET.CIEXYZTRIPLE.Green">
            <summary>
            The CIEXYZ Green component.
            </summary>
        </member>
        <member name="F:lcmsNET.CIEXYZTRIPLE.Blue">
            <summary>
            The CIEXYZ Blue component.
            </summary>
        </member>
        <member name="M:lcmsNET.CIEXYZTRIPLE.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.CIEXYZTRIPLE"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.CIEXYZTRIPLE"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.CIExyYTRIPLE">
            <summary>
            Represents a triple of CIExyY values.
            </summary>
        </member>
        <member name="F:lcmsNET.CIExyYTRIPLE.Red">
            <summary>
            The CIExyY Red component.
            </summary>
        </member>
        <member name="F:lcmsNET.CIExyYTRIPLE.Green">
            <summary>
            The CIExyY Green component.
            </summary>
        </member>
        <member name="F:lcmsNET.CIExyYTRIPLE.Blue">
            <summary>
            The CIExyY Blue component.
            </summary>
        </member>
        <member name="M:lcmsNET.CIExyYTRIPLE.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.CIExyYTRIPLE"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.CIExyYTRIPLE"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.Colorimetric">
            <summary>
            Provides static methods to convert between color spaces.
            </summary>
        </member>
        <member name="M:lcmsNET.Colorimetric.XYZ2Lab(lcmsNET.CIEXYZ@,lcmsNET.CIEXYZ@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIEXYZ"/> value to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="whitePoint">The white point to be used in the conversion.</param>
            <param name="xyz">The <see cref="T:lcmsNET.CIEXYZ"/> value to be converted.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.Lab2XYZ(lcmsNET.CIEXYZ@,lcmsNET.CIELab@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIELab"/> value to <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
            <param name="whitePoint">The white point to be used in the conversion.</param>
            <param name="lab">The <see cref="T:lcmsNET.CIELab"/> value to be converted.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIEXYZ"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.Lab2LCh(lcmsNET.CIELab@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIELab"/> value to <see cref="T:lcmsNET.CIELCh"/>.
            </summary>
            <param name="lab">The <see cref="T:lcmsNET.CIELab"/> value to be converted.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELCh"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.LCh2Lab(lcmsNET.CIELCh@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIELCh"/> value to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="lch">The <see cref="T:lcmsNET.CIELCh"/> value to be converted.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.LabEncoded2Float(System.UInt16[])">
            <summary>
            Converts an Lab value encoded using ICC v4 convention to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="wLab">An array in which the first 3 values encode an Lab value using ICC v4 convention.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.LabEncoded2Float(System.ReadOnlySpan{System.UInt16})">
            <summary>
            Converts an Lab value encoded using ICC v4 convention to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="wLab">A read only span of 3 values encoding an Lab value using ICC v4 convention.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.Float2LabEncoded(lcmsNET.CIELab@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIELab"/> value to an Lab value using ICC v4 convention.
            </summary>
            <param name="lab">The <see cref="T:lcmsNET.CIELab"/> to be converted.</param>
            <returns>An array of 3 values encoding an Lab value using ICC v4 convention.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.LabEncoded2FloatV2(System.UInt16[])">
            <summary>
            Converts an Lab value encoded using ICC v2 convention to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="wLab">An array in which the first 3 values encode an Lab value using ICC v2 convention.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.LabEncoded2FloatV2(System.ReadOnlySpan{System.UInt16})">
            <summary>
            Converts an Lab value encoded using ICC v2 convention to <see cref="T:lcmsNET.CIELab"/>.
            </summary>
            <param name="wLab">A read only span of 3 values encoding an Lab value using ICC v2 convention.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIELab"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.Float2LabEncodedV2(lcmsNET.CIELab@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIELab"/> value to an Lab value using ICC v2 convention.
            </summary>
            <param name="lab">The <see cref="T:lcmsNET.CIELab"/> to be converted.</param>
            <returns>An array of 3 values encoding an Lab value using ICC v2 convention.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.XYZEncoded2Float(System.UInt16[])">
            <summary>
            Converts an XYZ value encoded using ICC convention to <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
            <param name="xyz">An array of 3 values encoding an XYZ value using ICC convention.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIEXYZ"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.XYZEncoded2Float(System.ReadOnlySpan{System.UInt16})">
            <summary>
            Converts an XYZ value encoded using ICC convention to <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
            <param name="xyz">A read only span of 3 values encoding an XYZ value using ICC convention.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIEXYZ"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.Float2XYZEncoded(lcmsNET.CIEXYZ@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIEXYZ"/> value to an XYZ value using ICC convention.
            </summary>
            <param name="fxyz">The <see cref="T:lcmsNET.CIEXYZ"/> to be converted.</param>
            <returns>An array of 3 values encoding an XYZ value using ICC convention.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.Desaturate(lcmsNET.CIELab@,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Performs gamut mapping on the supplied <see cref="T:lcmsNET.CIELab"/> value.
            </summary>
            <param name="lab">The <see cref="T:lcmsNET.CIELab"/> to be mapped.</param>
            <param name="aMax">The maximum a gamut boundary.</param>
            <param name="aMin">The minimum a gamut boundary.</param>
            <param name="bMax">The maximum b gamut boundary.</param>
            <param name="bMin">The minimum b gamut boundary.</param>
            <returns></returns>
        </member>
        <member name="P:lcmsNET.Colorimetric.D50_XYZ">
            <summary>
            Gets the D50 white point in XYZ.
            </summary>
        </member>
        <member name="P:lcmsNET.Colorimetric.D50_xyY">
            <summary>
            Gets the D50 white point in xyY.
            </summary>
        </member>
        <member name="M:lcmsNET.Colorimetric.XYZ2xyY(lcmsNET.CIEXYZ@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIEXYZ"/> value to <see cref="T:lcmsNET.CIExyY"/>.
            </summary>
            <param name="xyz">The <see cref="T:lcmsNET.CIEXYZ"/> value to be converted.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIExyY"/> value.</returns>
        </member>
        <member name="M:lcmsNET.Colorimetric.xyY2XYZ(lcmsNET.CIExyY@)">
            <summary>
            Converts a <see cref="T:lcmsNET.CIExyY"/> value to <see cref="T:lcmsNET.CIEXYZ"/>.
            </summary>
            <param name="xyY">The <see cref="T:lcmsNET.CIExyY"/> value to be converted.</param>
            <returns>The corresponding <see cref="T:lcmsNET.CIEXYZ"/> value.</returns>
        </member>
        <member name="T:lcmsNET.FreeUserData">
            <summary>
            Defines a delegate that can be used to free user data.
            </summary>
            <param name="contextID">The handle to the <see cref="T:lcmsNET.Context"/> with which the user data is associated.</param>
            <param name="userData">The pointer to the user data to be freed.</param>
        </member>
        <member name="T:lcmsNET.Context">
            <summary>
            Represents a context.
            </summary>
        </member>
        <member name="M:lcmsNET.Context.FromHandle(System.IntPtr)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Context"/> class from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing context.</param>
            <returns>A new <see cref="T:lcmsNET.Context"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
        </member>
        <member name="M:lcmsNET.Context.Create(System.IntPtr,System.IntPtr)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Context"/> class.
            </summary>
            <param name="plugin">
            A pointer to a collection of plug-ins, or <see cref="F:System.IntPtr.Zero"/> if no plug-ins.
            </param>
            <param name="userData">
            A pointer to user-defined data that will be forwarded to plug-ins and the
            context-specific logger, or <see cref="F:System.IntPtr.Zero"/> if none.
            </param>
            <returns>A new <see cref="T:lcmsNET.Context"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Context.Duplicate(System.IntPtr)">
            <summary>
            Duplicates a context with all associated plug-ins.
            </summary>
            <param name="userData">
            A pointer to user-defined data that will be forwarded to plug-ins and the
            context-specific logger, or <see cref="F:System.IntPtr.Zero"/> to use the user-defined
            data from this <see cref="T:lcmsNET.Context"/> instance.
            </param>
            <returns>A new <see cref="T:lcmsNET.Context"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The Context has already been disposed.
            </exception>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Context.RegisterPlugins(System.IntPtr)">
            <summary>
            Installs a collection of plug-ins to the context.
            </summary>
            <param name="plugin">A pointer to the collection of plug-ins.</param>
            <returns>true if successfule, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Context has already been disposed.
            </exception>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Context.UnregisterPlugins">
            <summary>
            Uninstalls all plug-ins from the context.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            The Context has already been disposed.
            </exception>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Context.SetErrorHandler(lcmsNET.ErrorHandler)">
            <summary>
            Sets the error handler for the context.
            </summary>
            <param name="handler">The error handler to be set or null to reset to default.</param>
            <exception cref="T:System.ObjectDisposedException">
            The Context has already been disposed.
            </exception>
            <remarks>
            The default error handler does nothing.
            </remarks>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="P:lcmsNET.Context.AlarmCodes">
            <summary>
            Gets or sets the codes used to mark out-of-gamut on proofing transforms
            for the context.
            </summary>
            <value>
            An array of 16 values.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            The Context has already been disposed.
            </exception>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="P:lcmsNET.Context.AdaptationState">
            <summary>
            Gets or sets the adaptation state for absolute colorimetric intent for the context.
            </summary>
            <value>
            <list type="bullet">
            <item>d = Degree on adaptation.</item>
            <item>0 = Not adapted.</item>
            <item>1 = Complete adaptation.</item>
            <item>in-between = Partial adaptation.</item>
            </list>
            </value>
            <exception cref="T:System.ObjectDisposedException">
            The Context has already been disposed.
            </exception>
            <remarks>
            Ignored for transforms created using
            <see cref="M:lcmsNET.Transform.Create(lcmsNET.Context,lcmsNET.Profile[],System.Boolean[],lcmsNET.Intent[],System.Double[],lcmsNET.Profile,System.Int32,System.UInt32,System.UInt32,lcmsNET.CmsFlags)"/>.
            </remarks>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="P:lcmsNET.Context.UserData">
            <summary>
            Gets the user data associated with this context, or <see cref="F:System.IntPtr.Zero"/>
            if no user was attached on creation or the instance has been disposed.
            </summary>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="P:lcmsNET.Context.ID">
            <summary>
            Gets the identifier of this context.
            </summary>
        </member>
        <member name="P:lcmsNET.Context.SupportedIntents">
            <summary>
            Gets the collection of all supported intents for this context.
            </summary>
            <remarks>
            <para>
            Requires Little CMS version 2.6 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Context.ReleaseHandle">
            <summary>
            Frees the context handle.
            </summary>
        </member>
        <member name="T:lcmsNET.DateTimeNumber">
            <summary>
            Represents an ICC date and time.
            </summary>
            <remarks>
            The data should be encoded as big-endian.
            </remarks>
        </member>
        <member name="F:lcmsNET.DateTimeNumber.year">
            <summary>
            Number of the year (actual year, e.g. 1994)
            </summary>
        </member>
        <member name="F:lcmsNET.DateTimeNumber.month">
            <summary>
            Number of the month (1 to 12)
            </summary>
        </member>
        <member name="F:lcmsNET.DateTimeNumber.day">
            <summary>
            Number of the day of the month (1 to 31)
            </summary>
        </member>
        <member name="F:lcmsNET.DateTimeNumber.hours">
            <summary>
            Number of hours (0 to 23)
            </summary>
        </member>
        <member name="F:lcmsNET.DateTimeNumber.minutes">
            <summary>
            Number of minutes (0 to 59)
            </summary>
        </member>
        <member name="F:lcmsNET.DateTimeNumber.seconds">
            <summary>
            Number of seconds (0 to 59)
            </summary>
        </member>
        <member name="T:lcmsNET.DeltaE">
            <summary>
            Defines static methods to compute the difference between two colors.
            </summary>
        </member>
        <member name="M:lcmsNET.DeltaE.DE76(lcmsNET.CIELab@,lcmsNET.CIELab@)">
            <summary>
            Computes the difference between two colors using Delta-E 1976 (CIE76).
            </summary>
            <param name="lab1">First <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="lab2">Second <see cref="T:lcmsNET.CIELab"/> color.</param>
            <returns>The Delta-E 76 difference between the colors.</returns>
        </member>
        <member name="M:lcmsNET.DeltaE.CMC(lcmsNET.CIELab@,lcmsNET.CIELab@,System.Double,System.Double)">
            <summary>
            Computes the difference between two colors using the CMC l:c method.
            </summary>
            <param name="lab1">First <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="lab2">Second <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="l">Lightness factor.</param>
            <param name="c">Chroma factor.</param>
            <returns>The CMC l:c difference between the colors.</returns>
        </member>
        <member name="M:lcmsNET.DeltaE.BFD(lcmsNET.CIELab@,lcmsNET.CIELab@)">
            <summary>
            Computes the difference between two colors using the BFD method.
            </summary>
            <param name="lab1">First <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="lab2">Second <see cref="T:lcmsNET.CIELab"/> color.</param>
            <returns>The BFD difference between the colors.</returns>
        </member>
        <member name="M:lcmsNET.DeltaE.CIE94(lcmsNET.CIELab@,lcmsNET.CIELab@)">
            <summary>
            Computes the difference between two colors using the CIE94 method.
            </summary>
            <param name="lab1">First <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="lab2">Second <see cref="T:lcmsNET.CIELab"/> color.</param>
            <returns>The CIE94 difference between the colors.</returns>
        </member>
        <member name="M:lcmsNET.DeltaE.CIEDE2000(lcmsNET.CIELab@,lcmsNET.CIELab@,System.Double,System.Double,System.Double)">
            <summary>
            Computes the difference between two colors using the CIEDE2000 method.
            </summary>
            <param name="lab1">First <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="lab2">Second <see cref="T:lcmsNET.CIELab"/> color.</param>
            <param name="kL">kL.</param>
            <param name="kC">kC.</param>
            <param name="kH">kH.</param>
            <returns>The CIEDE2000 difference between the colors.</returns>
        </member>
        <member name="T:lcmsNET.Dict">
            <summary>
            Represents a dictionary of <see cref="T:lcmsNET.DictEntry"/> items.
            </summary>
        </member>
        <member name="M:lcmsNET.Dict.FromHandle(System.IntPtr)">
            <summary>
            Creates a dictionary from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing dictionary.</param>
            <returns>
            A new <see cref="T:lcmsNET.Dict"/> instance referencing an existing dictionary.
            </returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            The <paramref name="handle"/> is <see cref="F:System.IntPtr.Zero"/>.
            </exception>
        </member>
        <member name="M:lcmsNET.Dict.Create(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Dict"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Dict"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            <para>
            Requires Little CMS version 2.2 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Dict.Duplicate">
            <summary>
            Duplicates a dictionary.
            </summary>
            <returns>A new <see cref="T:lcmsNET.Dict"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The Dict has already been disposed.
            </exception>
            <remarks>
            Requires Little CMS version 2.2 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Dict.Add(System.String,System.String,lcmsNET.MultiLocalizedUnicode,lcmsNET.MultiLocalizedUnicode)">
            <summary>
            Adds an item to the dictionary.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="value">The value of the item.</param>
            <param name="displayName">The display name of the item. Can be null.</param>
            <param name="displayValue">The display value of the item. Can be null.</param>
            <returns>true if the item has been added, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Dict has already been disposed.
            </exception>
            <remarks>
            <para>
            No check is made for duplicate entries.
            </para>
            <para>
            Requires Little CMS version 2.2 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Dict.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the dictionary.
            </summary>
            <returns>An enumerator that can be used to iterate through the dictionary.</returns>
        </member>
        <member name="M:lcmsNET.Dict.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the dictionary.
            </summary>
            <returns>An enumerator that can be used to iterate through the dictionary.</returns>
        </member>
        <member name="M:lcmsNET.Dict.ReleaseHandle">
            <summary>
            Frees the dictionary handle.
            </summary>
        </member>
        <member name="T:lcmsNET.DictEntry">
            <summary>
            Represents a name-value entry in a dictionary.
            </summary>
        </member>
        <member name="P:lcmsNET.DictEntry.DisplayName">
            <summary>
            Gets the display name of the entry. Can be null.
            </summary>
        </member>
        <member name="P:lcmsNET.DictEntry.DisplayValue">
            <summary>
            Gets the display value of the entry. Can be null.
            </summary>
        </member>
        <member name="P:lcmsNET.DictEntry.Name">
            <summary>
            Gets the name of the entry.
            </summary>
        </member>
        <member name="P:lcmsNET.DictEntry.Value">
            <summary>
            Gets the value of the entry.
            </summary>
        </member>
        <member name="T:lcmsNET.LcmsNETException">
            <summary>
            Serves as the base class for lcmsNET exceptions.
            </summary>
        </member>
        <member name="M:lcmsNET.LcmsNETException.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.LcmsNETException"/> class.
            </summary>
        </member>
        <member name="M:lcmsNET.LcmsNETException.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.LcmsNETException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:lcmsNET.LcmsNETException.#ctor(System.String,System.Exception)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.LcmsNETException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> is
            not a null reference, the current exception is raised in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="T:lcmsNET.GamutBoundaryDescriptor">
            <summary>
            Represents a gamut boundary descriptor.
            </summary>
        </member>
        <member name="M:lcmsNET.GamutBoundaryDescriptor.Create(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.GamutBoundaryDescriptor"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.CAM02"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.GamutBoundaryDescriptor.AddPoint(lcmsNET.CIELab@)">
            <summary>
            Adds a new point for computing the gamut boundary descriptor.
            </summary>
            <param name="lab">A <see cref="T:lcmsNET.CIELab"/> value defining the point.</param>
            <returns>true if the point was added successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The descriptor has already been disposed.
            </exception>
            <remarks>
            This method can be invoked as many times as known points. The gamut boundary
            descriptor cannot be checked until <see cref="M:lcmsNET.GamutBoundaryDescriptor.Compute(System.UInt32)"/> is invoked.
            </remarks>
        </member>
        <member name="M:lcmsNET.GamutBoundaryDescriptor.Compute(System.UInt32)">
            <summary>
            Computes the gamut boundary descriptor using all known points and interpolating
            any missing sector(s).
            </summary>
            <param name="flags">Reserved. Set to 0.</param>
            <returns>true if computed successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The descriptor has already been disposed.
            </exception>
            <remarks>
            Call this method after adding all known points with <see cref="M:lcmsNET.GamutBoundaryDescriptor.AddPoint(lcmsNET.CIELab@)"/>
            and before invoking <see cref="M:lcmsNET.GamutBoundaryDescriptor.CheckPoint(lcmsNET.CIELab@)"/>.
            </remarks>
        </member>
        <member name="M:lcmsNET.GamutBoundaryDescriptor.CheckPoint(lcmsNET.CIELab@)">
            <summary>
            Checks whether the specified Lab value is inside the gamut boundary descriptor.
            </summary>
            <param name="lab">A <see cref="T:lcmsNET.CIELab"/> point.</param>
            <returns>true if the point is inside the gamut, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The descriptor has already been disposed.
            </exception>
            <remarks>
            Call this method after adding all known points with <see cref="M:lcmsNET.GamutBoundaryDescriptor.AddPoint(lcmsNET.CIELab@)"/>
            and computing the gamut boundary descriptor with <see cref="M:lcmsNET.GamutBoundaryDescriptor.Compute(System.UInt32)"/>.
            </remarks>
        </member>
        <member name="M:lcmsNET.GamutBoundaryDescriptor.ReleaseHandle">
            <summary>
            Frees the gamut boundary descriptor handle.
            </summary>
        </member>
        <member name="T:lcmsNET.ICCData">
            <summary>
            Represents a data structure that contains either 7-bit ASCII or binary data.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCData.ASCII">
            <summary>
            7-bit ASCII data type.
            </summary>
        </member>
        <member name="F:lcmsNET.ICCData.Binary">
            <summary>
            Binary (transparent 8-bit bytes) data type.
            </summary>
        </member>
        <member name="P:lcmsNET.ICCData.Flag">
            <summary>
            Gets the data type contained by this instance.
            </summary>
        </member>
        <member name="M:lcmsNET.ICCData.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.ICCData"/> class from the
            specified <see cref="T:System.String"/>.
            </summary>
            <param name="s">A string.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="s"/> is null.
            </exception>
            <remarks>
            <para>
            Sets the data type to <see cref="F:lcmsNET.ICCData.ASCII"/>.
            </para>
            <para>
            Non-ASCII characters are replaced with the value 63 which is the ASCII
            character code for '?'.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.ICCData.#ctor(System.Byte[])">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.ICCData"/> class from the
            specified byte array.
            </summary>
            <param name="bytes">An array of bytes.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="bytes"/> is null.
            </exception>
            <remarks>
            Sets the data type to <see cref="F:lcmsNET.ICCData.Binary"/>.
            </remarks>
        </member>
        <member name="M:lcmsNET.ICCData.op_Explicit(lcmsNET.ICCData)~System.String">
            <summary>
            Explicitly converts an <see cref="T:lcmsNET.ICCData"/> to a <see cref="T:System.String"/>.
            </summary>
            <param name="iccData">The <see cref="T:lcmsNET.ICCData"/> to be converted.</param>
            <exception cref="T:System.InvalidCastException">
            <paramref name="iccData"/> does not have a data type of <see cref="F:lcmsNET.ICCData.ASCII"/>.
            </exception>
        </member>
        <member name="M:lcmsNET.ICCData.op_Explicit(lcmsNET.ICCData)~System.Byte[]">
            <summary>
            Explicitly converts an <see cref="T:lcmsNET.ICCData"/> to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="iccData">The <see cref="T:lcmsNET.ICCData"/> to be converted.</param>
            <exception cref="T:System.InvalidCastException">
            <paramref name="iccData"/> does not have a data type of <see cref="F:lcmsNET.ICCData.Binary"/>.
            </exception>
        </member>
        <member name="M:lcmsNET.ICCData.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.ICCData"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.ICCData"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.Impl.CmsHandle`1">
            <summary>
            Provides a base class for objects that wrapper handles created and managed by Little CMS.
            </summary>
        </member>
        <member name="M:lcmsNET.Impl.CmsHandle`1.#ctor(System.IntPtr,lcmsNET.Context,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.Impl.CmsHandle`1"/> class with
            the supplied handle.
            </summary>
            <param name="handle">A handle obtained from Little CMS.</param>
            <param name="context">The context, or null for the global context.</param>
            <param name="isOwner">true if <paramref name="handle"/> is owned by this instance.</param>
        </member>
        <member name="P:lcmsNET.Impl.CmsHandle`1.Context">
            <summary>
            Gets the context in which the instance was created.
            </summary>
        </member>
        <member name="M:lcmsNET.Impl.CmsHandle`1.Release">
            <summary>
            Releases the handle.
            </summary>
        </member>
        <member name="M:lcmsNET.Impl.CmsHandle`1.EnsureNotClosed">
            <summary>
            Throws an <see cref="T:System.ObjectDisposedException"/> if the instance has been closed.
            </summary>
        </member>
        <member name="P:lcmsNET.Impl.CmsHandle`1.Handle">
            <summary>
            Gets the value of the handle.
            </summary>
        </member>
        <member name="P:lcmsNET.Impl.CmsHandle`1.IsInvalid">
            <summary>
            Gets a value indicating whether the handle value is invalid.
            </summary>
        </member>
        <member name="T:lcmsNET.Impl.TagBase`1">
            <summary>
            Provides a base class for tags that can be read from or written to a profile.
            </summary>
        </member>
        <member name="M:lcmsNET.Impl.TagBase`1.#ctor(System.IntPtr,lcmsNET.Context,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.Impl.TagBase`1"/> class with
            the supplied handle.
            </summary>
            <param name="handle">A handle obtained from Little CMS.</param>
            <param name="context">The context, or null for the global context.</param>
            <param name="isOwner">true if <paramref name="handle"/> is owned by this instance.</param>
        </member>
        <member name="T:lcmsNET.IOHandler">
            <summary>
            Represents an I/O handler.
            </summary>
        </member>
        <member name="M:lcmsNET.IOHandler.FromHandle(System.IntPtr)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.IOHandler"/> class from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing I/O handler.</param>
            <returns>A new <see cref="T:lcmsNET.IOHandler"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
        </member>
        <member name="M:lcmsNET.IOHandler.Open(lcmsNET.Context)">
            <summary>
            Creates a void <see cref="T:lcmsNET.IOHandler"/>. All read operations return 0 bytes and
            set the EOF flag. All write operations discard the given data.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.IOHandler"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.IOHandler.Open(lcmsNET.Context,System.String,System.String)">
            <summary>
            Creates a <see cref="T:lcmsNET.IOHandler"/> from a file.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="filepath">Full path to the file.</param>
            <param name="access">"r" for read access, or "w" for write access.</param>
            <returns>A new <see cref="T:lcmsNET.IOHandler"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.IOHandler.Open(lcmsNET.Context,System.IntPtr,System.UInt32,System.String)">
            <summary>
            Creates a <see cref="T:lcmsNET.IOHandler"/> from a memory block.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <param name="memorySize">The size of the block of memory in bytes.</param>
            <param name="access">"r" for read access, or "w" for write access.</param>
            <returns>A new <see cref="T:lcmsNET.IOHandler"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.Byte@)">
            <summary>
            Reads an 8-bit unsigned integer.
            </summary>
            <param name="n">Returns the 8-bit unsigned integer.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.UInt16@)">
            <summary>
            Reads a 16-bit unsigned integer.
            </summary>
            <param name="n">Returns the 16-bit unsigned integer.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.UInt32@)">
            <summary>
            Reads a 32-bit unsigned integer.
            </summary>
            <param name="n">Returns the 32-bit unsigned integer.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.UInt64@)">
            <summary>
            Reads a 64-bit unsigned integer.
            </summary>
            <param name="n">Returns the 64-bit unsigned integer.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.Single@)">
            <summary>
            Reads a 32-bit floating point number.
            </summary>
            <param name="f">Returns the 32-bit floating point number.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.Double@)">
            <summary>
            Reads a double precision floating point point number.
            </summary>
            <param name="d">Returns the double precision floating point number.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(lcmsNET.CIEXYZ@)">
            <summary>
            Reads an XYZ tristimulus value.
            </summary>
            <param name="xyz">Returns the XYZ tristimulus value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(System.UInt16[])">
            <summary>
            Reads an array of 16-bit unsigned integers.
            </summary>
            <param name="array">The array of 16-bit unsigned integers.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.Byte)">
            <summary>
            Writes an 8-bit unsigned integer.
            </summary>
            <param name="n">The 8-bit unsigned integer to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.UInt16)">
            <summary>
            Writes a 16-bit unsigned integer.
            </summary>
            <param name="n">The 16-bit unsigned integer to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.UInt32)">
            <summary>
            Writes a 32-bit unsigned integer.
            </summary>
            <param name="n">The 32-bit unsigned integer to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.UInt64)">
            <summary>
            Writes a 64-bit unsigned integer.
            </summary>
            <param name="n">The 64-bit unsigned integer to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.Single)">
            <summary>
            Writes a 32-bit floating point number.
            </summary>
            <param name="f">The 32-bit floating point number to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.Double)">
            <summary>
            Writes a double precision floating point point number.
            </summary>
            <param name="d">The double precision floating point number to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(lcmsNET.CIEXYZ)">
            <summary>
            Writes an XYZ tristimulus value.
            </summary>
            <param name="xyz">The XYZ tristimulus value to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(System.UInt16[])">
            <summary>
            Writes an array of 16-bit unsigned integers.
            </summary>
            <param name="array">The array of 16-bit unsigned integers.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.ReadAlignment">
            <summary>
            Skips bytes on the I/O handler until a 32-bit aligned position.
            </summary>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.WriteAlignment">
            <summary>
            Writes zeroes on theI/O handler until a 32-bit aligned position.
            </summary>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Read(lcmsNET.TagTypeSignature@)">
            <summary>
            Reads a <see cref="T:lcmsNET.TagTypeSignature"/> from the I/O handler.
            </summary>
            <param name="sig">Returns the <see cref="T:lcmsNET.TagTypeSignature"/>.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.Write(lcmsNET.TagTypeSignature)">
            <summary>
            Writes a <see cref="T:lcmsNET.TagTypeSignature"/> to the I/O handler.
            </summary>
            <param name="sig">The <see cref="T:lcmsNET.TagTypeSignature"/> to be written.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IOHandler.ReleaseHandle">
            <summary>
            Frees the i/o handler handle.
            </summary>
        </member>
        <member name="T:lcmsNET.IT8">
            <summary>
            Defines methods and properties for reading and writing ANSI CGATS.17 text files.
            </summary>
        </member>
        <member name="M:lcmsNET.IT8.Create(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.IT8"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.IT8"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="P:lcmsNET.IT8.TableCount">
            <summary>
            Gets the number of tables in this instance.
            </summary>
            <remarks>
            An <see cref="T:lcmsNET.IT8"/> instance created with <see cref="M:lcmsNET.IT8.Create(lcmsNET.Context)"/> initially
            has one table allocated.
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.SetTable(System.UInt32)">
            <summary>
            Sets the current table.
            </summary>
            <param name="nTable">Zero-based index of the table.</param>
            <returns>The index of the current table, or -1 on error.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The object has already been disposed.
            </exception>
            <remarks>
            Set <paramref name="nTable"/> to <see cref="P:lcmsNET.IT8.TableCount"/> to add a new table.
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.Open(lcmsNET.Context,System.String)">
            <summary>
            Opens and populates a new instance of the <see cref="T:lcmsNET.IT8"/> class from the contents
            of an existing CGATS file.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="filepath">The full path to the file.</param>
            <returns>A new <see cref="T:lcmsNET.IT8"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.Open(lcmsNET.Context,System.Byte[])">
            <summary>
            Opens and populates a new instance of the <see cref="T:lcmsNET.IT8"/> class from the supplied
            memory block.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="memory">A block of contiguous memory containing the CGATS.17 data.</param>
            <returns>A new <see cref="T:lcmsNET.IT8"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.Save(System.String)">
            <summary>
            Saves the instance to file in CGATS.17 format.
            </summary>
            <param name="filepath">The full path to the file.</param>
            <returns>true if saved successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The object has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.IT8.Save(System.Byte[],System.UInt32@)">
            <summary>
            Saves the instance to a contiguous memory block in CGATS.17 format.
            </summary>
            <param name="it8">
            A byte array sufficiently sized to contain the data, or null to calculate required size.
            </param>
            <param name="bytesNeeded">
            On return defines the number of bytes required to contain the data.
            </param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The object has already been disposed.
            </exception>
        </member>
        <member name="P:lcmsNET.IT8.SheetType">
            <summary>
            Gets or sets the identifier placed on the very first line of the CGATS.17 file.
            </summary>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to set the sheet type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The object has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.IT8.AddComment(System.String)">
            <summary>
            Adds a comment to the file.
            </summary>
            <param name="comment">The comment to be inserted.</param>
            <returns>true if added successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The object has already been disposed.
            </exception>
            <remarks>
            Successive calls to this method add comments in the same order as invoked.
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.GetProperty(System.String)">
            <summary>
            Gets the value of a property in the current table as a literal string.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The literal string value of the property, or null on error.</returns>
        </member>
        <member name="M:lcmsNET.IT8.GetDoubleProperty(System.String)">
            <summary>
            Gets the value of a property in the current table as a floating point number.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The floating point value of the property, or 0 on error.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetProperty(System.String,System.String)">
            <summary>
            Sets a string property in the current table.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The property value.</param>
            <returns>true if successful, otherwise false.</returns>
            <remarks>
            <para>
            Strings are enclosed in quotes "".
            </para>
            <para>
            Sub-properties are allowed if <paramref name="value"/> is a string
            in the form:
            </para>
            <para>
            "SUBPROP1,1;SUBPROP2,2;...".
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.SetProperty(System.String,System.Double)">
            <summary>
            Sets a floating point property in the current table.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The property value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetProperty(System.String,System.UInt32)">
            <summary>
            Sets a hexadecimal constant (appends 0x) property in the current table.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="hex">The property value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetUncookedProperty(System.String,System.String)">
            <summary>
            Sets a property with no interpretation in the current table.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The property value.</param>
            <returns>true if successful, otherwise false.</returns>
            <remarks>
            <para>
            No quotes "" are added. No checking is performed, so it is upto
            the caller to ensure that the string is valid.
            </para>
            <para>
            Special prefixes:
            <list type="bullet">
            <item>0b: Binary</item>
            <item>0x: Hexadecimal</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.SetProperty(System.String,System.String,System.String)">
            <summary>
            Adds a new sub-property to an existing property in the current table.
            </summary>
            <param name="key">An existing property in the current table.</param>
            <param name="subkey">The name of the sub-property.</param>
            <param name="value">The uncooked value value of the sub-property.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="P:lcmsNET.IT8.Properties">
            <summary>
            Gets an object that can be used to enumerate all properties in the current table.
            </summary>
        </member>
        <member name="M:lcmsNET.IT8.GetProperties(System.String)">
            <summary>
            Gets an object that can be used to enumerate all sub-property names for a
            multi-value property in the current table.
            </summary>
            <param name="name">The name of the multi-value property.</param>
            <returns>An object that can be used to enumerate the sub-property names.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The object has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.IT8.GetData(System.Int32,System.Int32)">
            <summary>
            Gets a cell [row, column] value as a literal string in the current table.
            </summary>
            <param name="row">The zero-based row.</param>
            <param name="column">The zero-based column.</param>
            <returns>The literal string value of the cell, or null on error.</returns>
        </member>
        <member name="M:lcmsNET.IT8.GetData(System.String,System.String)">
            <summary>
            Gets a cell [patch, sample] value as a literal string in the current table.
            </summary>
            <param name="patch">The intended patch name (row).</param>
            <param name="sample">The intended sample name (column).</param>
            <returns>The literal string value of the cell, or null on error.</returns>
        </member>
        <member name="M:lcmsNET.IT8.GetDoubleData(System.Int32,System.Int32)">
            <summary>
            Gets a cell [row, column] value as a floating point number in the current table.
            </summary>
            <param name="row">The zero-based row.</param>
            <param name="column">The zero-based column.</param>
            <returns>The floating point value of the cell, or 0 on error.</returns>
        </member>
        <member name="M:lcmsNET.IT8.GetDoubleData(System.String,System.String)">
            <summary>
            Gets a cell [patch, sample] value as a floating point number in the current table.
            </summary>
            <param name="patch">The intended patch name (row).</param>
            <param name="sample">The intended sample name (column).</param>
            <returns>The floating point value of the cell, or 0 on error.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetData(System.Int32,System.Int32,System.String)">
            <summary>
            Sets a cell [row, column] value to a literal string in the current table.
            </summary>
            <param name="row">The zero-based row.</param>
            <param name="column">The zero-based column.</param>
            <param name="value">The literal string value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetData(System.String,System.String,System.String)">
            <summary>
            Sets a cell [patch, sample] value to a literal string in the current table.
            </summary>
            <param name="patch">The intended patch name (row).</param>
            <param name="sample">The intended sample name (column).</param>
            <param name="value">The literal string value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetData(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets a cell [row, column] value to a floating point number in the current table.
            </summary>
            <param name="row">The zero-based row.</param>
            <param name="column">The zero-based column.</param>
            <param name="value">The literal string value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetData(System.String,System.String,System.Double)">
            <summary>
            Sets a cell [patch, column] value to a floating point number in the current table.
            </summary>
            <param name="patch">The intended patch name (row).</param>
            <param name="sample">The intended sample name (column).</param>
            <param name="value">The literal string value.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:lcmsNET.IT8.FindDataFormat(System.String)">
            <summary>
            Gets the zero-based column position of a given data sample name in the current table.
            </summary>
            <param name="sample">The sample name.</param>
            <returns>The column number, or -1 if not found.</returns>
        </member>
        <member name="M:lcmsNET.IT8.SetDataFormat(System.Int32,System.String)">
            <summary>
            Sets the column names in the current table.
            </summary>
            <param name="column">The zero-based column number.</param>
            <param name="sample">The sample name for the column.</param>
            <returns>true if successful, otherwise false.</returns>
            <remarks>
            <para>
            The first column is "SAMPLE_ID".
            </para>
            The special property "NUMBER_OF_FIELDS" must be set for the current table
            before calling this method.
            </remarks>
        </member>
        <member name="P:lcmsNET.IT8.SampleNames">
            <summary>
            Gets an object that can be used to enumerate the sample names for the columns
            in the current table.
            </summary>
        </member>
        <member name="M:lcmsNET.IT8.GetPatchName(System.Int32)">
            <summary>
            Gets the value of the first column (patch name) for the given set number.
            </summary>
            <param name="nPatch">The zero-based set number.</param>
            <returns>The patch name, or null on error.</returns>
        </member>
        <member name="P:lcmsNET.IT8.DoubleFormat">
            <summary>
            Sets the format string for floating point numbers using the "C" sprintf convention.
            </summary>
            <remarks>
            The default format is "%.10g".
            </remarks>
        </member>
        <member name="M:lcmsNET.IT8.ReleaseHandle">
            <summary>
            Frees the IT8 handle.
            </summary>
        </member>
        <member name="T:lcmsNET.MHC2">
            <summary>
            Represents a private tag used by Microsoft to describe GPU hardware
            pipelines for displays.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.CurveEntries">
            <summary>
            Number of elements in each 1D LUT.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.RedCurve">
            <summary>
            The red 1D LUT.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.GreenCurve">
            <summary>
            The blue 1D LUT.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.BlueCurve">
            <summary>
            The green 1D LUT.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.MinLuminance">
            <summary>
            The ST.2086 min luminance in nits.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.PeakLuminance">
            <summary>
            The ST.2086 peak luminance in nits.
            </summary>
        </member>
        <member name="F:lcmsNET.MHC2.XYZ2XYXmatrix">
            <summary>
            The 3x4 XYZ to XYZ adjustment matrix.
            </summary>
        </member>
        <member name="M:lcmsNET.MHC2.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.MHC2"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.MHC2"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.MultiLocalizedUnicode">
            <summary>
            Represents a multi-localized Unicode string.
            </summary>
        </member>
        <member name="F:lcmsNET.MultiLocalizedUnicode.NoLanguage">
            <summary>
            The language code for 'no language'.
            </summary>
        </member>
        <member name="F:lcmsNET.MultiLocalizedUnicode.NoCountry">
            <summary>
            The country code for 'no country'.
            </summary>
        </member>
        <member name="F:lcmsNET.MultiLocalizedUnicode.V2Unicode">
            <summary>
            A special language/country code to retrieve the Unicode description from V2 profiles.
            </summary>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.FromHandle(System.IntPtr)">
            <summary>
            Creates a multi-localized Unicode string from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing multi-localized Unicode string.</param>
            <returns>A new <see cref="T:lcmsNET.MultiLocalizedUnicode"/> instance referencing an existing multi-localized Unicode string.</returns>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.Create(lcmsNET.Context,System.UInt32)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.MultiLocalizedUnicode"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nItems">The initial number of items to be allocated.</param>
            <returns>A new <see cref="T:lcmsNET.MultiLocalizedUnicode"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.Duplicate">
            <summary>
            Duplicates a multi-localized Unicode string.
            </summary>
            <returns>A new <see cref="T:lcmsNET.MultiLocalizedUnicode"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.SetASCII(System.String,System.String,System.String)">
            <summary>
            Sets an ASCII (7 bit) entry for the given language and country code.
            </summary>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <param name="value">The value to be set.</param>
            <returns>true if set successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.SetWide(System.String,System.String,System.String)">
            <summary>
            Sets a Unicode wide character (16 bit) entry for the given language and country code.
            </summary>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <param name="value">The value to be set.</param>
            <returns>true if set successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.SetUTF8(System.String,System.String,System.String)">
            <summary>
            Sets a wide character (16 bit) entry for the given language and country code
            by converting it from UTF-8 encoding.
            </summary>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <param name="value">The value to be set.</param>
            <returns>true if set successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.GetASCII(System.String,System.String)">
            <summary>
            Gets the ASCII (7 bit) entry for the given language and country code.
            </summary>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <returns>The entry, or null if not found.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.GetWide(System.String,System.String)">
            <summary>
            Gets the Unicode wide character (16 bit) entry for the given language and country code.
            </summary>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <returns>The entry, or null if not found.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.GetUTF8(System.String,System.String)">
            <summary>
            Gets the UTF-8 entry for the given language and country code.
            </summary>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <returns>The entry, or null if not found.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
            <remarks>
            <para>
            Requires Little CMS 2.16 version or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.GetTranslation(System.String,System.String,System.String@,System.String@)">
            <summary>
            Gets the translation rule for the given language and country code.
            </summary>
            <param name="languageCode">The required ISO 639-1 language code.</param>
            <param name="countryCode">The required ISO 3166-1 country code.</param>
            <param name="translationLanguage">
            Returns the ISO 639-1 language code obtained if successful, otherwise null.
            </param>
            <param name="translationCountry">
            Returns the ISO 3166-1 country code obtained if successful, otherwise null.
            </param>
            <returns>true if a translation exists, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
            <remarks>
            The algorithm searches for an exact match of language and country code. If not
            found it attempts to match the language code, and if this does not yield a result
            the first entry is returned.
            </remarks>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.TranslationsCodes(System.UInt32,System.String@,System.String@)">
            <summary>
            Gets the language and country codes for the given translation index.
            </summary>
            <param name="index">The zero-based index.</param>
            <param name="languageCode">
            Returns the ISO 639-1 language code if successful, otherwise null.
            </param>
            <param name="countryCode">
            Returns the ISO 3166-1 country code if successful, otherwise null.
            </param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The multi-localized Unicode string has already been disposed.
            </exception>
        </member>
        <member name="P:lcmsNET.MultiLocalizedUnicode.TranslationsCount">
            <summary>
            Gets the number of translations stored in the multi-localized Unicode string.
            </summary>
            <remarks>
            Requires Little CMS version 2.5 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.MultiLocalizedUnicode.ReleaseHandle">
            <summary>
            Frees the MLU handle.
            </summary>
        </member>
        <member name="T:lcmsNET.NamedColorList">
            <summary>
            Represents a named color list.
            </summary>
        </member>
        <member name="M:lcmsNET.NamedColorList.FromHandle(System.IntPtr)">
            <summary>
            Creates a named color list from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing named color list.</param>
            <returns>A new <see cref="T:lcmsNET.NamedColorList"/> instance referencing an existing named color list.</returns>
        </member>
        <member name="M:lcmsNET.NamedColorList.Create(lcmsNET.Context,System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.NamedColorList"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="n">The initial number of spot colors in the list.</param>
            <param name="colorantCount">The number of channels in the device space.</param>
            <param name="prefix">Prefix for all spot color names.</param>
            <param name="suffix">Suffix for all spot color names.</param>
            <returns>A new <see cref="T:lcmsNET.NamedColorList"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.NamedColorList.Duplicate">
            <summary>
            Duplicates a named color list.
            </summary>
            <returns>A new <see cref="T:lcmsNET.NamedColorList"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The named color list has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.NamedColorList.Add(System.String,System.UInt16[],System.UInt16[])">
            <summary>
            Adds a new spot color to the list.
            </summary>
            <param name="name">The spot color name.</param>
            <param name="pcs">An array of 3 values encoding the PCS coordinates.</param>
            <param name="colorant">An array of 16 values encoding the device colorant.</param>
            <returns>true if the spot color was added to the list, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The named color list has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.NamedColorList.GetInfo(System.UInt32,System.String@,System.String@,System.String@,System.UInt16[]@,System.UInt16[]@)">
            <summary>
            Gets information for a spot color with the given index.
            </summary>
            <param name="nColor">The index of the spot color.</param>
            <param name="name">Returns the name of the spot color.</param>
            <param name="prefix">Returns the prefix for the spot color.</param>
            <param name="suffix">Returns the suffix for the spot color.</param>
            <param name="pcs">Returns an array of 3 values encoding the PCS coordinates for the spot color.</param>
            <param name="colorant">Returns an array of 16 values encoding the device colorant for the spot color.</param>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="P:lcmsNET.NamedColorList.Item(System.String)">
            <summary>
            Gets the index of the given spot color name.
            </summary>
            <param name="name">The name of the spot color.</param>
            <returns>The zero-based index of the spot color, or -1 if not found.</returns>
        </member>
        <member name="P:lcmsNET.NamedColorList.Count">
            <summary>
            Gets the number of spot colors in the named color list.
            </summary>
        </member>
        <member name="M:lcmsNET.NamedColorList.ReleaseHandle">
            <summary>
            Frees the named color list handle.
            </summary>
        </member>
        <member name="T:lcmsNET.DupUserData">
            <summary>
            Defines a delegate that can be used to duplicate user data.
            </summary>
            <param name="contextID">The handle to the <see cref="T:lcmsNET.Context"/> with which the user data is associated.</param>
            <param name="userData">The pointer to the user data to be duplicated.</param>
        </member>
        <member name="T:lcmsNET.OptEval16">
            <summary>
            Defines a delegate to evaluate the optimized version of a LUT.
            </summary>
            <param name="In">Pointer to a const array of <see cref="T:System.UInt16"/>.</param>
            <param name="Out">Pointer to an array of <see cref="T:System.UInt16"/>.</param>
            <param name="Data">Pointer to private data.</param>
        </member>
        <member name="T:lcmsNET.StageLoc">
            <summary>
            Defines a location of a <see cref="T:lcmsNET.Stage"/> within a <see cref="T:lcmsNET.Pipeline"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.StageLoc.At_Begin">
            <summary>
            The beginning of the pipeline.
            </summary>
        </member>
        <member name="F:lcmsNET.StageLoc.At_End">
            <summary>
            The end of the pipeline.
            </summary>
        </member>
        <member name="T:lcmsNET.Pipeline">
            <summary>
            Represents an ordered collection of <see cref="T:lcmsNET.Stage"/> instances where each
            stage performs a single operation on image data. The output of a first stage
            provides the input to the next and so on through the pipeline.
            </summary>
        </member>
        <member name="M:lcmsNET.Pipeline.Create(lcmsNET.Context,System.UInt32,System.UInt32)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Pipeline"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="inputChannels">The number of input channels.</param>
            <param name="outputChannels">The number of output channels.</param>
            <returns>A new <see cref="T:lcmsNET.Pipeline"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Pipeline.FromHandle(System.IntPtr)">
            <summary>
            Creates a pipeline from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing pipeline.</param>
            <returns>A new <see cref="T:lcmsNET.Pipeline"/> instance referencing an existing pipeline.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            The <paramref name="handle"/> is <see cref="F:System.IntPtr.Zero"/>.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.Duplicate">
            <summary>
            Duplicates a pipeline.
            </summary>
            <returns>A new <see cref="T:lcmsNET.Pipeline"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.Append(lcmsNET.Pipeline)">
            <summary>
            Appends the supplied <see cref="T:lcmsNET.Pipeline"/> to the end of this pipeline.
            </summary>
            <param name="other">The pipeline to be appended to the end of this pipeline.</param>
            <returns>true if appended successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.Evaluate(System.Single[])">
            <summary>
            Evaluates the pipeline using the supplied floating point values.
            </summary>
            <param name="values">The values to supply to the pipeline.</param>
            <returns>The values resulting from evaluation of the pipeline.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.EvaluateReverse(System.Single[],System.Single[],System.Boolean@)">
            <summary>
            Evaluates the pipeline in the reverse direction for the supplied floating point values using Newton's method.
            </summary>
            <param name="values">The values to supply to the pipeline.</param>
            <param name="hint">An array of hint values where to begin the search, can be null.</param>
            <param name="success">Returns true if the pipeline was evaluated successfully, otherwise false.</param>
            <returns>The values resulting from evaluation of the pipeline.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.Evaluate(System.UInt16[])">
            <summary>
            Evaluates the pipeline using the supplied unsigned 16-bit integer values.
            </summary>
            <param name="values">The values to supply to the pipeline.</param>
            <returns>The values resulting from evaluation of the pipeline.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.Insert(lcmsNET.Stage,lcmsNET.StageLoc)">
            <summary>
            Inserts a <see cref="T:lcmsNET.Stage"/> to the start or end of the pipeline.
            </summary>
            <param name="stage">The <see cref="T:lcmsNET.Stage"/> to be inserted.</param>
            <param name="location">The location where the stage is to be inserted.</param>
            <returns>true if the pipeline is inserted, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
            <remarks>
            Ownership of the <see cref="T:lcmsNET.Stage"/> passes to the pipeline so its resources
            will be freed when the pipeline is disposed.
            </remarks>
        </member>
        <member name="M:lcmsNET.Pipeline.Unlink(lcmsNET.StageLoc)">
            <summary>
            Removes a <see cref="T:lcmsNET.Stage"/> from the start or end of the pipeline.
            </summary>
            <param name="location">The location from where the stage is to be removed.</param>
            <returns>The <see cref="T:lcmsNET.Stage"/> that has been removed. Can be null.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
            <remarks>
            The caller is responsible for disposing any <see cref="T:lcmsNET.Stage"/> removed using this method.
            </remarks>
        </member>
        <member name="M:lcmsNET.Pipeline.UnlinkAndDispose(lcmsNET.StageLoc)">
            <summary>
            Removes and disposes a <see cref="T:lcmsNET.Stage"/> from the start or end of the pipeline.
            </summary>
            <param name="location">The location from where the stage is to be removed.</param>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Pipeline.SetAs8BitsFlag(System.Boolean)">
            <summary>
            Sets in internal flag that marks the pipeline to be saved in 8- or 16-bit precision.
            </summary>
            <param name="on">true sets 8-bit precision, false sets 16-bit precision.</param>
            <returns>true if set successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The pipeline has already been disposed.
            </exception>
            <remarks>
            By default all pipelines are saved as 16-bit precision for AtoB/BtoA tags and as
            floating point precision for DtoB/BtoD tags.
            </remarks>
        </member>
        <member name="M:lcmsNET.Pipeline.DefaultICCIntents(lcmsNET.Context,lcmsNET.Intent[],lcmsNET.Profile[],System.Boolean[],System.Double[],lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Pipeline"/> class with default ICC intents.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="intents">The intent to apply on each profile to profile joint.</param>
            <param name="profiles">An array of open profiles.</param>
            <param name="bpc">An array of black point compensation states for each profile to profile joint.</param>
            <param name="adaptationStates">An array of observer adaptation states for each profile to profile joint.</param>
            <param name="flags">The flags to control the process.</param>
            <returns></returns>
        </member>
        <member name="M:lcmsNET.Pipeline.Release">
            <summary>
            Releases ownership of the pipeline.
            </summary>
            <returns>The pointer to the pipeline.</returns>
        </member>
        <member name="M:lcmsNET.Pipeline.SetOptimizationParameters(lcmsNET.OptEval16,System.IntPtr,lcmsNET.FreeUserData,lcmsNET.DupUserData)">
            <summary>
            Sets the optimisation parameters for a pipeline.
            </summary>
            <param name="eval16">Delegate to perform fast evaluation of the pipeline.</param>
            <param name="privateData">Initial private data, can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="freePrivateDataFn">
            Delegate to free private data, can be null if <paramref name="privateData"/> is <see cref="F:System.IntPtr.Zero"/>.
            </param>
            <param name="dupPrivateDataFn">
            Delegate to duplicate private data, can be null if <paramref name="privateData"/> is <see cref="F:System.IntPtr.Zero"/>.
            </param>
        </member>
        <member name="P:lcmsNET.Pipeline.InputChannels">
            <summary>
            Gets the number of input channels for the pipeline.
            </summary>
        </member>
        <member name="P:lcmsNET.Pipeline.OutputChannels">
            <summary>
            Gets the number of output channels for the pipeline.
            </summary>
        </member>
        <member name="P:lcmsNET.Pipeline.StageCount">
            <summary>
            Gets the number of stages in the pipeline.
            </summary>
        </member>
        <member name="M:lcmsNET.Pipeline.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the stages in the pipeline.
            </summary>
            <returns>An enumerator that can be used to iterate through the stages in the pipeline.</returns>
        </member>
        <member name="M:lcmsNET.Pipeline.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the stages in the pipeline.
            </summary>
            <returns>An enumerator that can be used to iterate through the stages in the pipeline.</returns>
        </member>
        <member name="M:lcmsNET.Pipeline.ReleaseHandle">
            <summary>
            Frees the pipeline handle.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.FixedPoint">
            <summary>
            Provides methods to convert to and from fixed point representations.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.FixedPoint.ToDouble(System.UInt16)">
            <summary>
            Converts from an 8.8 fixed point representation to a double-precision floating point number.
            </summary>
            <param name="fixed8">An 8.8 encoded fixed point value.</param>
            <returns>The equivalent double-precision floating point number.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.FixedPoint.ToFixed8Dot8(System.Double)">
            <summary>
            Converts from a double-precision floating point number to an 8.8 fixed point representation.
            </summary>
            <param name="d">The value to be converted.</param>
            <returns>The equivalent, rounded 8.8 fixed point representation.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.FixedPoint.ToDouble(System.Int32)">
            <summary>
            Converts from a signed 15.16 fixed point representation to a double-precision floating point number.
            </summary>
            <param name="fixed32">A signed 15.16 encoded fixed point value.</param>
            <returns>The equivalent double-precision floating point number.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.FixedPoint.ToFixed15Dot16(System.Double)">
            <summary>
            Converts from a double-precision floating point number to a signed 15.16 fixed point representation.
            </summary>
            <param name="d">The value to be converted.</param>
            <returns>The equivalent, rounded signed 15.16 fixed point representation.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MAT3">
            <summary>
            Represents a 3x3 matrix formed from 3 <see cref="T:lcmsNET.Plugin.VEC3"/> vectors.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.MAT3.v">
            <summary>
            The vector components of the matrix.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.#ctor(lcmsNET.Plugin.VEC3[])">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.Plugin.MAT3"/> class.
            </summary>
            <param name="v">An array of 3 <see cref="T:lcmsNET.Plugin.VEC3"/> instances.</param>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.Zeroes">
            <summary>
            Creates a zeroes matrix.
            </summary>
            <returns>A new zeroes matrix.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.Identity">
            <summary>
            Creates an identity matrix.
            </summary>
            <returns>A new identity matrix.</returns>
        </member>
        <member name="P:lcmsNET.Plugin.MAT3.Item(System.Int32)">
            <summary>
            Gets the vector at the specified index.
            </summary>
            <param name="index">The zero-based index of the vector.</param>
            <returns>The vector at the specified index.</returns>
        </member>
        <member name="P:lcmsNET.Plugin.MAT3.IsIdentity">
            <summary>
            Returns true if the matrix is close enough to be interpreted as identity, otherwise returns false.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.Multiply(lcmsNET.Plugin.MAT3@,lcmsNET.Plugin.MAT3@)">
            <summary>
            Muliplies two matrices.
            </summary>
            <param name="a">The first matrix.</param>
            <param name="b">The second matrix.</param>
            <returns>A matrix containing the result of the multiplication.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.Invert(lcmsNET.Plugin.MAT3@,lcmsNET.Plugin.MAT3@)">
            <summary>
            Inverts a matrix.
            </summary>
            <param name="a">The matrix to be inverted.</param>
            <param name="b">Returns the inverted matrix.</param>
            <returns>true if successful, otherwise false.</returns>
            <remarks>
            Returns false if <paramref name="a"/> is singular.
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.Solve(lcmsNET.Plugin.MAT3@,lcmsNET.Plugin.VEC3@,lcmsNET.Plugin.VEC3@)">
            <summary>
            Solves a system in the form Ax = b.
            </summary>
            <param name="a">The matrix, A.</param>
            <param name="b">The vector, b.</param>
            <param name="x">Returns a vector with the result.</param>
            <returns>true if successful, otherwise false.</returns>
            <remarks>
            Returns false if <paramref name="a"/> is singular.
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.MAT3.Evaluate(lcmsNET.Plugin.MAT3@,lcmsNET.Plugin.VEC3@)">
            <summary>
            Evaluates a matrix.
            </summary>
            <param name="a">The matrix to be evaluated.</param>
            <param name="v">The vector to be evaluated.</param>
            <returns>A vector containing the result of the evaluation.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MD5">
            <summary>
            Provides methods to expose the MD5 message digest algorithms internal
            to Little CMS.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.MD5.Create(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Plugin.MD5"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Plugin.MD5"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            <para>
            Requires Little CMS version 2.10 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.MD5.Add(System.Byte[])">
            <summary>
            Adds to the digest the contents of the supplied memory.
            </summary>
            <param name="memory">The memory holding the values to be used to compute the digest.</param>
            <exception cref="T:System.ObjectDisposedException">
            The message digest has already been disposed.
            </exception>
            <remarks>
            Requires Little CMS version 2.10 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.MD5.Freeze">
            <summary>
            Computes the digest and freezes this instance.
            </summary>
            <remarks>
            Requires Little CMS version 2.10 or later.
            </remarks>
        </member>
        <member name="P:lcmsNET.Plugin.MD5.Digest">
            <summary>
            Gets the value of the message digest for this instance.
            </summary>
            <remarks>
            The <see cref="M:lcmsNET.Plugin.MD5.Freeze"/> method must be invoked before invoking this property.
            </remarks>
            <exception cref="T:lcmsNET.LcmsNETException">
            The Freeze() method has not been invoked on this instance.
            </exception>
        </member>
        <member name="M:lcmsNET.Plugin.MD5.ReleaseHandle">
            <summary>
            Frees the MD5 handle.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.Memory">
            <summary>
            Provides access to the memory management primitives used by the core
            Liitle CMS engine. These use the memory management plug-in if defined.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.Memory.Malloc(lcmsNET.Context,System.UInt32)">
            <summary>
            Allocates <paramref name="size"/> bytes of uninitialized memory.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="size">The number of bytes of memory to be allocated.</param>
            <returns>A pointer to the unmanaged memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.Memory.Free(lcmsNET.Context,System.IntPtr)">
            <summary>
            Frees the unmanaged memory allocated to <paramref name="ptr"/>.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="ptr">The pointer to unmanaged memory.</param>
            <remarks>
            No action occurs if <paramref name="ptr"/> is <see cref="F:System.IntPtr.Zero"/>.
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.Memory.MallocZero(lcmsNET.Context,System.UInt32)">
            <summary>
            Allocates <paramref name="size"/> bytes of zeroed memory.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="size">The number of bytes of memory to be allocated.</param>
            <returns>A pointer to the unmanaged memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.Memory.Calloc(lcmsNET.Context,System.UInt32,System.UInt32)">
            <summary>
            Allocates space for an array of <paramref name="count"/> elements each of <paramref name="size"/> bytes.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="count">The number of array elements.</param>
            <param name="size">The size of each element in bytes.</param>
            <returns>A pointer to the unmanaged memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            <para>
            The memory will be initialized to zero.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Plugin.Memory.Realloc(lcmsNET.Context,System.IntPtr,System.UInt32)">
            <summary>
            Reallocates the memory at <paramref name="ptr"/> to <paramref name="newSize"/> bytes.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="ptr">The pointer to existing unmanaged memory to be reallocated.</param>
            <param name="newSize">The new size for the memory in bytes.</param>
            <returns>A pointer to the unmanaged memory newly allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.Memory.Duplicate(lcmsNET.Context,System.IntPtr,System.UInt32)">
            <summary>
            Duplicates the memory at <paramref name="ptr"/> into a new block.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="ptr">The pointer to existing unmanaged memory to be duplicated.</param>
            <param name="size">The size of the memory in bytes.</param>
            <returns>A pointer to the unmanaged memory newly allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.PluginType">
            <summary>
            Defines the plug-in types.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.MemoryHandler">
            <summary>
            'memH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.Interpolation">
            <summary>
            'inpH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.ParametricCurve">
            <summary>
            'parH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.Formatters">
            <summary>
            'frmH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.TagType">
            <summary>
            'typH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.Tag">
            <summary>
            'tagH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.RenderingIntent">
            <summary>
            'intH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.MultiProcessElement">
            <summary>
            'mpeH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.Optimization">
            <summary>
            'optH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.Transform">
            <summary>
            'xfmH'
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginType.Mutex">
            <summary>
            'mtxH'
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.PluginBase">
            <summary>
            Base structure for all plug-ins.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginBase.Magic">
            <summary>
            Identifies the structure as a Little CMS 2 plug-in.
            </summary>
            <remarks>
            This must contain the value <see cref="F:lcmsNET.Cms.PluginMagicNumber"/>.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginBase.ExpectedVersion">
            <summary>
            The expected Little CMS version.
            </summary>
            <remarks>
            Little CMS core will accept plug-ins with an expected version less or
            equal than the core version. If a plug-in is marked for a version
            greater than the core the plug-in will be rejected. This means that
            downgrading the core engine will disable certain plug-ins.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginBase.Type">
            <summary>
            Identifies the type of plug-in.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginBase.Next">
            <summary>
            Points to the next plug-in header in multi plug-in packages.
            </summary>
            <remarks>
            Set to <see cref="F:System.IntPtr.Zero"/> to mark the end of the chain.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.DecideType">
            <summary>
            Defines a delegate to select tag type based on the version of the ICC profile.
            </summary>
            <param name="iccVersion">The ICC profile version.</param>
            <param name="data">Pointer to tag contents.</param>
            <returns>The <see cref="T:lcmsNET.TagTypeSignature"/> of the tag.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.TagDescriptor">
            <summary>
            Defines a descriptor for tag plug-ins.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.TagDescriptor.ElemCount">
            <summary>
            If the tag needs an array defines the number of elements, minimum 1.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.TagDescriptor.nSupportedTypes">
            <summary>
            Number of elements in <see cref="F:lcmsNET.Plugin.TagDescriptor.SupportedTypes"/> array, minimum 1.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.TagDescriptor.SupportedTypes">
            <summary>
            Types supported for the tag.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.TagDescriptor.Decider">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.DecideType"/> to select the tag type
            based on the version of the ICC profile.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.TagDescriptor.MAX_TYPES_IN_LCMS_PLUGIN">
            <summary>
            Defines size of array to be allocated for <see cref="F:lcmsNET.Plugin.TagDescriptor.SupportedTypes"/>.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.PluginTag">
            <summary>
            Defines the tag plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTag.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTag.Signature">
            <summary>
            Identifies the tag signature.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTag.Descriptor">
            <summary>
            The descriptor for the tag.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.TagTypeRead">
            <summary>
            Defines a delegate to allocate and reads items.
            </summary>
            <param name="self">The tag type handler.</param>
            <param name="io">A pointer to the I/O handler to be used to perform the read.</param>
            <param name="nItems">Returns the number of items allocated.</param>
            <param name="tagSize">The size of the tag.</param>
            <returns>A pointer to the unmanaged memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.TagTypeWrite">
            <summary>
            Defines a delegate to write n items.
            </summary>
            <param name="self">The tag type handler.</param>
            <param name="io">A pointer to an I/O handler to be used to perform the write.</param>
            <param name="ptr">A pointer to the data to be written.</param>
            <param name="nItems">The number of items.</param>
            <returns>Non-zero on success, otherwise zero.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.TagTypeDuplicate">
            <summary>
            Defines a delegate to duplicate an item or array of items.
            </summary>
            <param name="self">The tag type handler.</param>
            <param name="ptr">A pointer to the unmanaged memory to be duplicated.</param>
            <param name="n">The number of items.</param>
            <returns>A pointer to the unmanaged memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.TagTypeFree">
            <summary>
            Defines a delegate to free all resources.
            </summary>
            <param name="self">The tag type handler.</param>
            <param name="ptr">A pointer to the unmanaged memory to be freed.</param>
        </member>
        <member name="T:lcmsNET.Plugin.TagTypeHandler">
            <summary>
            Defines the tag type handler.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.TagTypeHandler.Signature">
            <summary>
            Identifies the tag type signature.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.TagTypeHandler.Read">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.TagTypeRead"/> to allocate and read items.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.TagTypeHandler.Write">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.TagTypeWrite"/> to write n items.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.TagTypeHandler.Duplicate">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.TagTypeDuplicate"/> to duplicate an item
            or array of items.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.TagTypeHandler.Free">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.TagTypeFree"/> to free all resources.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.TagTypeHandler.ContextID">
            <summary>
            The calling thread context.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.PluginTagType">
            <summary>
            Defines the tag type plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTagType.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTagType.Handler">
            <summary>
            The tag type handler.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryMalloc">
            <summary>
            Defines a delegate to allocate memory.
            </summary>
            <param name="contextID">The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="size">The size of memory to be allocated in bytes.</param>
            <returns>A pointer to the memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryFree">
            <summary>
            Defines a delegate to free memory.
            </summary>
            <param name="contextID">The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="ptr">A pointer to the memory to be freed.</param>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryRealloc">
            <summary>
            Defines a delegate to re-allocate memory.
            </summary>
            <param name="contextID">The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="ptr">A pointer to the existing memory.</param>
            <param name="newSize">The size of memory to be allocated in bytes.</param>
            <returns>A pointer to the memory re-allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryMallocZero">
            <summary>
            Defines a delegate to allocate memory filled with zeroes.
            </summary>
            <param name="contextID">The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="size">The size of memory to be allocated in bytes.</param>
            <returns>A pointer to the memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryCalloc">
            <summary>
            Defines a delegate to allocate a block of memory for an array of elements filled with zeroes.
            </summary>
            <param name="contextID">The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="count">The number of elements to allocate.</param>
            <param name="size">The size of each element to be allocated in bytes.</param>
            <returns>A pointer to the memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryDuplicate">
            <summary>
            Defines a delegate to duplicate memory into a newly allocated block of memory.
            </summary>
            <param name="contextID">The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.</param>
            <param name="ptr">A pointer to the memory to be duplicated.</param>
            <param name="size">The size of the memory to be duplicated in bytes.</param>
            <returns>A pointer to the memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryNonContextualMalloc">
            <summary>
            Defines a delegate to allocate memory to create contexts.
            </summary>
            <param name="userData">A pointer to user-defined data.</param>
            <param name="size">The size of memory to be allocated in bytes.</param>
            <returns>A pointer to the memory allocated, or <see cref="F:System.IntPtr.Zero"/> on error.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.MemoryNonContextualFree">
            <summary>
            Defines a delegate to free memory used to create contexts.
            </summary>
            <param name="userData">A pointer to user-defined data.</param>
            <param name="ptr">A pointer to the memory to be freed.</param>
        </member>
        <member name="T:lcmsNET.Plugin.PluginMemoryHandler">
            <summary>
            Defines the memory handler plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.Malloc">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryMalloc"/> to allocate memory.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.Free">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryFree"/> to free memory.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.Realloc">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryRealloc"/> to re-allocate memory.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.MallocZero">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryMallocZero"/> to allocate zeroed memory.
            </summary>
            <remarks>
            <para>
            Optional. Can be set to <see cref="F:System.IntPtr.Zero"/>.
            </para>
            <para>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </para>
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.Calloc">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryCalloc"/> to allocate a block of memory
            for an array of elements.
            </summary>
            <remarks>
            <para>
            Optional. Can be set to <see cref="F:System.IntPtr.Zero"/>.
            </para>
            <para>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </para>
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.Duplicate">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryDuplicate"/> to duplicate memory.
            </summary>
            <remarks>
            <para>
            Optional. Can be set to <see cref="F:System.IntPtr.Zero"/>.
            </para>
            <para>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </para>
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.NonContextualMalloc">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryNonContextualMalloc"/> to allocate memory.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMemoryHandler.NonContextualFree">
            <summary>
            Pointer to delegate of type <see cref="T:lcmsNET.Plugin.MemoryNonContextualFree"/> to free memory.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.LerpFlags">
            <summary>
            Defines flags that are passed to the interpolators factory.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.LerpFlags.SixteenBits">
            <summary>
            Defines the base type as 16 bit.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.LerpFlags.FloatingPoint">
            <summary>
            Defines the base type as floating-point.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.LerpFlags.Trilinear">
            <summary>
            Hint to use tri-linear interpolation.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.InterpolationParamsV1">
            <summary>
            Defines pre-computed parameters for use by interpolators.
            </summary>
            <remarks>
            Use this variant of interpolation parameters for Little CMS 2.11 and before.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.ContextID">
            <summary>
            The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.dwFlags">
            <summary>
            A copy of the flags specified when requesting the interpolation.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.nInputs">
            <summary>
            The number of input channels.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.nOutputs">
            <summary>
            The number of output channels.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.nSamples">
            <summary>
            The number of grid points in each input dimension.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.Domain">
            <summary>
            The number of grid points minus one in each input dimension.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.opta">
            <summary>
            The result of multiplying Domin[n]*Opta[n-1] (offset in the table in base type).
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.Table">
            <summary>
            Pointer to a block of unmanaged memory holding the table of gridpoints.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV1.Interpolation">
            <summary>
            Pointer to the interpolator itself.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.InterpolationParamsV2">
            <summary>
            Defines pre-computed parameters for use by interpolators.
            </summary>
            <remarks>
            Use this variant of interpolation parameters for Little CMS 2.12 and later.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.ContextID">
            <summary>
            The calling thread context. Can be <see cref="F:System.IntPtr.Zero"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.dwFlags">
            <summary>
            A copy of the flags specified when requesting the interpolation.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.nInputs">
            <summary>
            The number of input channels.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.nOutputs">
            <summary>
            The number of output channels.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.nSamples">
            <summary>
            The number of grid points in each input dimension.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.Domain">
            <summary>
            The number of grid points minus one in each input dimension.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.opta">
            <summary>
            The result of multiplying Domin[n]*Opta[n-1] (offset in the table in base type).
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.Table">
            <summary>
            Pointer to a block of unmanaged memory holding the table of gridpoints.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationParamsV2.Interpolation">
            <summary>
            Pointer to the interpolator itself.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.InterpFn16">
            <summary>
            Defines a delegate to perform 16 bits interpolation.
            </summary>
            <param name="input">The inputs.</param>
            <param name="output">The outputs.</param>
            <param name="p">
            A pointer to the pre-computed parameters of type <see cref="T:lcmsNET.Plugin.InterpolationParamsV1"/> or <see cref="T:lcmsNET.Plugin.InterpolationParamsV2"/>.
            </param>
        </member>
        <member name="T:lcmsNET.Plugin.InterpFnFloat">
            <summary>
            Defines a delegate to perform floating point interpolation.
            </summary>
            <param name="input">The inputs.</param>
            <param name="output">The outputs.</param>
            <param name="p">
            A pointer to the pre-computed parameters of type <see cref="T:lcmsNET.Plugin.InterpolationParamsV1"/> or <see cref="T:lcmsNET.Plugin.InterpolationParamsV2"/>.
            </param>
        </member>
        <member name="T:lcmsNET.Plugin.InterpolationFunction">
            <summary>
            Defines a structure that provides the interpolator delegate returned by the interpolators factory.
            </summary>
            <remarks>
            In Little CMS this is a union of pointers that in the end behaves a single pointer, see cmsInterpFunction.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.InterpolationFunction.Interpolator">
            <summary>
            Pointer to the interpolator delegate,
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.InterpolatorsFactory">
            <summary>
            Defines a delegate to define the interpolators factory.
            </summary>
            <param name="nInputChannels">The number of input channels.</param>
            <param name="nOutputChannels">The number of output channels.</param>
            <param name="flags">Flags defining base-type and any hints.</param>
            <returns>A structure of type <see cref="T:lcmsNET.Plugin.InterpolationFunction"/>.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.PluginInterpolation">
            <summary>
            Defines the interpolation plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginInterpolation.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginInterpolation.Factory">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.InterpolatorsFactory"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.ParametricCurveEvaluator">
            <summary>
            Defines a delegate for user-supplied parametric curves.
            </summary>
            <param name="Type">The curve type.</param>
            <param name="Params">The parameters for the curve type.</param>
            <param name="R"></param>
            <returns>The result of applying the curve.</returns>
            <remarks>
            <para>
            Each parametric curve plug-in may implement an arbitrary number of upto 20 curve types.
            </para>
            <para>
            A negative type means the same function but analytically inverted.
            </para>
            <para>
            The domain of R is effectively from minus infinity to plus infinity. However, the normal,
            in-range domain is 0..1, so you have to normalize your function to get values of
            R = [0..1.0] and deal with remaining cases if you want your function to be able to work
            in unbounded mode.
            </para>
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.PluginParametricCurves">
            <summary>
            Defines the parametric curves plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginParametricCurves.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginParametricCurves.nFunctions">
            <summary>
            The number of functions.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginParametricCurves.FunctionTypes">
            <summary>
            Id's for each parametric curve described by the plug-in.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginParametricCurves.ParameterCount">
            <summary>
            Number of parameters for each parametric curve described by the plug-in.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginParametricCurves.Evaluator">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.ParametricCurveEvaluator"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginParametricCurves.MAX_TYPES_IN_LCMS_PLUGIN">
            <summary>
            Defines size of array to be allocated for <see cref="F:lcmsNET.Plugin.PluginParametricCurves.FunctionTypes"/> and <see cref="F:lcmsNET.Plugin.PluginParametricCurves.ParameterCount"/>.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.FormatterDirection">
            <summary>
            Defines the possible formatter directions.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.FormatterDirection.Input">
            <summary>
            Input direction.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.FormatterDirection.Output">
            <summary>
            Output direction.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.Formatter16">
            <summary>
            Defines a delegate for a 16 bit unsigned integer formatter.
            </summary>
            <param name="CMMCargo"></param>
            <param name="Values"></param>
            <param name="Buffer"></param>
            <param name="Stride"></param>
            <returns></returns>
        </member>
        <member name="T:lcmsNET.Plugin.FormatterFloat">
            <summary>
            Defines a delegate for a 32 bit float formatter.
            </summary>
            <param name="CMMCargo"></param>
            <param name="Values"></param>
            <param name="Buffer"></param>
            <param name="Stride"></param>
            <returns></returns>
        </member>
        <member name="T:lcmsNET.Plugin.Formatter">
            <summary>
            Defines a pointer to a formatter that can be either 16 bit unsigned or 32 bit float.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.Formatter.Fmt">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.Formatter16"/> or <see cref="T:lcmsNET.Plugin.FormatterFloat"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.FormatterFactory">
            <summary>
            Defines a delegate to implement a format factory.
            </summary>
            <param name="Type">The type to format.</param>
            <param name="Dir">The required direction for the format.</param>
            <param name="dwFlags">Flags to select the formatter.</param>
            <returns></returns>
        </member>
        <member name="T:lcmsNET.Plugin.PluginFormatters">
            <summary>
            Defines the formatters plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginFormatters.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginFormatters.FormattersFactory">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.FormatterFactory"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginFormatters.PACK_FLAGS_16BIT">
            <summary>
            Identifies formatter as 16 bit.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginFormatters.PACK_FLAGS_FLOAT">
            <summary>
            Identifies formatter as 32 bit float.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.IntentFn">
            <summary>
            Defines a delegate to accept a chain of profiles and return a pipeline
            implementing a new intent.
            </summary>
            <param name="contextID"></param>
            <param name="nProfiles"></param>
            <param name="intents"></param>
            <param name="profiles"></param>
            <param name="bpc"></param>
            <param name="adaptationStates"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="T:lcmsNET.Plugin.PluginIntent">
            <summary>
            Defines the intent plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginIntent.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginIntent.Intent">
            <summary>
            The intent number.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginIntent.Link">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.IntentFn"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginIntent.Description">
            <summary>
            A description for the intent.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.PluginMultiProcessElement">
            <summary>
            Defines the stages plug-in structure.
            </summary>
            <remarks>
            <para>
            The <see cref="F:lcmsNET.Plugin.TagTypeHandler.Duplicate"/> and <see cref="F:lcmsNET.Plugin.TagTypeHandler.Free"/>
            fields of <see cref="F:lcmsNET.Plugin.PluginMultiProcessElement.Handler"/> are not used and should be set to <see cref="F:System.IntPtr.Zero"/>.
            </para>
            <para>
            The <see cref="F:lcmsNET.Plugin.TagTypeHandler.Read"/> delegate must invoke
            <see cref="M:lcmsNET.Stage.AllocPlaceholder(lcmsNET.Context,lcmsNET.StageSignature,System.UInt32,System.UInt32,lcmsNET.StageEvalFn,lcmsNET.StageDupElemFn,lcmsNET.StageFreeElemFn,System.IntPtr)"/>
            to create the stage.
            </para>
            <para>
            The <see cref="F:lcmsNET.Plugin.TagTypeHandler.Write"/> delegate can access the stage internals by using
            <see cref="P:lcmsNET.Stage.InputChannels"/>, <see cref="P:lcmsNET.Stage.OutputChannels"/>, <see cref="P:lcmsNET.Stage.StageType"/>
            and <see cref="P:lcmsNET.Stage.Data"/>.
            </para>
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMultiProcessElement.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMultiProcessElement.Handler">
            <summary>
            The tag type handler.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.OptimizeFn">
            <summary>
            Defines a delegate that defines the optimization algorithm callback.
            </summary>
            <param name="Lut"></param>
            <param name="Intent"></param>
            <param name="InputFormat"></param>
            <param name="OutputFormat"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="T:lcmsNET.Plugin.PluginOptimization">
            <summary>
            Defines the optimization plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginOptimization.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginOptimization.Optimize">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.OptimizeFn"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.Stride">
            <summary>
            Defines the stride of a line. 
            </summary>
            <remarks>
            Requires Little CMS version 2.8 or later.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.Stride.BytesPerLineIn">
            <summary>
            The distance in bytes from one line to the next on the input.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.Stride.BytesPerLineOut">
            <summary>
            The distance in bytes from one line to the next in the output.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.Stride.BytesPerPlaneIn">
            <summary>
            The distance in bytes from one plane to the next inside a line on the input.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.Stride.BytesPerPlaneOut">
            <summary>
            The distance in bytes from one plane to the next inside a line on the output.
            </summary>
        </member>
        <member name="T:lcmsNET.Plugin.TransformFn">
            <summary>
            
            </summary>
            <param name="CMM"></param>
            <param name="InputBuffer"></param>
            <param name="OutputBuffer"></param>
            <param name="Size"></param>
            <param name="Stride"></param>
            <remarks>
            Requires Little CMS version 2.4 to 2.7 and is deprecated in later versions.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.Transform2Fn">
            <summary>
            
            </summary>
            <param name="CMMCargo"></param>
            <param name="InputBuffer"></param>
            <param name="OutputBuffer"></param>
            <param name="PixelsPerLine"></param>
            <param name="LineCount"></param>
            <param name="Stride">Pointer to <see cref="T:lcmsNET.Plugin.Stride"/> structure.</param>
            <remarks>
            Requires Little CMS version 2.8 or later.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.TransformFactory">
            <summary>
            Defines a delegate that defines the transform factory.
            </summary>
            <param name="xformPtr"></param>
            <param name="UserData"></param>
            <param name="FreePrivateDataFn"></param>
            <param name="Lut"></param>
            <param name="InputFormat"></param>
            <param name="OutputFormat"></param>
            <param name="dwFlags"></param>
            <returns></returns>
            <remarks>
            Requires Little CMS version 2.4 or later.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.PluginTransform">
            <summary>
            Defines the full transform plug-in structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTransform.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginTransform.Factory">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.TransformFactory"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.CreateMutexFn">
            <summary>
            Defines a delegate to create a mutex.
            </summary>
            <param name="ContextID">The calling thread context.</param>
            <returns>A pointer to the mutex created.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.DestroyMutexFn">
            <summary>
            Defines a delegate to destroy a mutex.
            </summary>
            <param name="ContextID">The calling thread context.</param>
            <param name="mutex">A pointer to the mutex to be destroyed.</param>
        </member>
        <member name="T:lcmsNET.Plugin.LockMutexFn">
            <summary>
            Defines a delegate to lock a mutex.
            </summary>
            <param name="ContextID">The calling thread context.</param>
            <param name="mutex">A pointer to the mutex to be locked.</param>
            <returns>1 if successful, otherwise 0.</returns>
        </member>
        <member name="T:lcmsNET.Plugin.UnlockMutexFn">
            <summary>
            Defines a delegate to unlock a mutex.
            </summary>
            <param name="ContextID">The calling thread context.</param>
            <param name="mutex">A pointer to the mutex to be unlocked.</param>
        </member>
        <member name="T:lcmsNET.Plugin.PluginMutex">
            <summary>
            Defines the mutex plug-in structure.
            </summary>
            <remarks>
            Requires Little CMS version 2.6 or later.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMutex.Base">
            <summary>
            Inherited <see cref="T:lcmsNET.Plugin.PluginBase"/> structure.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMutex.Create">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.CreateMutexFn"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMutex.Destroy">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.DestroyMutexFn"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMutex.Lock">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.LockMutexFn"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="F:lcmsNET.Plugin.PluginMutex.Unlock">
            <summary>
            Pointer to a delegate of type <see cref="T:lcmsNET.Plugin.UnlockMutexFn"/>.
            </summary>
            <remarks>
            Invoke <see cref="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)"/>
            to obtain the <see cref="T:System.IntPtr"/> to be assigned to this value.
            </remarks>
        </member>
        <member name="T:lcmsNET.Plugin.VEC3">
            <summary>
            Represents a 3-component vector defined as using double precision floating point numbers.
            </summary>
        </member>
        <member name="F:lcmsNET.Plugin.VEC3.n">
            <summary>
            The components of the vector.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.VEC3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initialises the vector.
            </summary>
            <param name="x">x component of the vector.</param>
            <param name="y">y component of the vector.</param>
            <param name="z">z component of the vector.</param>
        </member>
        <member name="P:lcmsNET.Plugin.VEC3.Item(System.Int32)">
            <summary>
            Gets or sets the value of the vector component at the specified index.
            </summary>
            <param name="index">The zero-based index of the component.</param>
            <returns>The value of vector component at the specified index.</returns>
        </member>
        <member name="M:lcmsNET.Plugin.VEC3.op_Subtraction(lcmsNET.Plugin.VEC3@,lcmsNET.Plugin.VEC3@)">
            <summary>
            Performs vector subtraction.
            </summary>
            <param name="v1">A first vector.</param>
            <param name="v2">A vector containing the values to be subtracted from <paramref name="v1"/>.</param>
            <returns>
            A vector containing the difference between <paramref name="v1"/> and <paramref name="v2"/>.
            </returns>
        </member>
        <member name="M:lcmsNET.Plugin.VEC3.Cross(lcmsNET.Plugin.VEC3@,lcmsNET.Plugin.VEC3@)">
            <summary>
            Calculates the cross (vector) product of the supplied vectors.
            </summary>
            <param name="v1">The first vector.</param>
            <param name="v2">The second vector.</param>
            <returns>
            The cross product of <paramref name="v1"/> and <paramref name="v2"/>.
            </returns>
        </member>
        <member name="M:lcmsNET.Plugin.VEC3.Dot(lcmsNET.Plugin.VEC3@,lcmsNET.Plugin.VEC3@)">
            <summary>
            Calculates the dot (scalar) product of the supplied vectors.
            </summary>
            <param name="v1">The first vector.</param>
            <param name="v2">The second vector.</param>
            <returns>
            The dot product of <paramref name="v1"/> and <paramref name="v2"/>.
            </returns>
        </member>
        <member name="P:lcmsNET.Plugin.VEC3.Length">
            <summary>
            Returns the Euclidean length of the vector.
            </summary>
        </member>
        <member name="M:lcmsNET.Plugin.VEC3.Distance(lcmsNET.Plugin.VEC3@,lcmsNET.Plugin.VEC3@)">
            <summary>
            Calculates the Euclidean distance between two vector points.
            </summary>
            <param name="v1">The first vector.</param>
            <param name="v2">The second vector.</param>
            <returns>The Euclidean distance between the points.</returns>
        </member>
        <member name="T:lcmsNET.Profile">
            <summary>
            Represents an International Color Consortium Profile.
            </summary>
        </member>
        <member name="M:lcmsNET.Profile.FromHandle(System.IntPtr)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing profile.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.CreatePlaceholder(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for an empty profile.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            <para>
            The profile must be populated before it can be used.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateRGB(lcmsNET.CIExyY@,lcmsNET.CIExyYTRIPLE@,lcmsNET.ToneCurve[])">
            <summary>
            Create a new instance of the <see cref="T:lcmsNET.Profile"/> class for a display RGB profile.
            </summary>
            <param name="whitePoint">The white point of the RGB device or color space.</param>
            <param name="primaries">The primaries in xyY of the device or color space.</param>
            <param name="transferFunction">An array of 3 tone curves describing the device or color space gamma.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateRGB(lcmsNET.Context,lcmsNET.CIExyY@,lcmsNET.CIExyYTRIPLE@,lcmsNET.ToneCurve[])">
            <summary>
            Create a new instance of the <see cref="T:lcmsNET.Profile"/> class for a display RGB profile in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="whitePoint">The white point of the RGB device or color space.</param>
            <param name="primaries">The primaries in xyY of the device or color space.</param>
            <param name="transferFunction">An array of 3 tone curves describing the device or color space gamma.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateGray(lcmsNET.CIExyY@,lcmsNET.ToneCurve)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a gray profile.
            </summary>
            <param name="whitePoint">The white point of the gray device or color space.</param>
            <param name="transferFunction">A tone curve describing the device or color space gamma.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateGray(lcmsNET.Context,lcmsNET.CIExyY@,lcmsNET.ToneCurve)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a gray profile in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="whitePoint">The white point of the gray device or color space.</param>
            <param name="transferFunction">A tone curve describing the device or color space gamma.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateLinearizationDeviceLink(lcmsNET.ColorSpaceSignature,lcmsNET.ToneCurve[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile.
            </summary>
            <param name="space">The color space.</param>
            <param name="transferFunction">An array of tone curves describing the device or color space linearisation.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateLinearizationDeviceLink(lcmsNET.Context,lcmsNET.ColorSpaceSignature,lcmsNET.ToneCurve[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="space">The color space.</param>
            <param name="transferFunction">An array of tone curves describing the device or color space linearisation.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateInkLimitingDeviceLink(lcmsNET.ColorSpaceSignature,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile operating
            in CMYK for ink limiting.
            </summary>
            <param name="space">The color space.</param>
            <param name="limit">The amount of ink limiting in % in the range 0..400%.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Only <see cref="F:lcmsNET.ColorSpaceSignature.CmykData"/> is supported.
            </para>
            <para>
            Creates the instance in the global context.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateInkLimitingDeviceLink(lcmsNET.Context,lcmsNET.ColorSpaceSignature,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile operating
            in CMYK for ink limiting in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="space">The color space.</param>
            <param name="limit">The amount of ink limiting in % in the range 0..400%.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Only <see cref="F:lcmsNET.ColorSpaceSignature.CmykData"/> is supported.
            </para>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateDeviceLinkFromCubeFile(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile operating
            in RGB from a 3D LUT file.
            </summary>
            <param name="filepath">The full path to the file.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            The file format corresponds to .CUBE file format as defined by Adobe in document
            cube-lut-specification-1.0.pdf.
            </para>
            <para>
            Creates the instance in the global context.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateDeviceLinkFromCubeFile(lcmsNET.Context,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile operating
            in RGB from a 3D LUT file in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="filepath">The full path to the file.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            The file format corresponds to .CUBE file format as defined by Adobe in document
            cube-lut-specification-1.0.pdf.
            </para>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateDeviceLink(lcmsNET.Transform,System.Double,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a device link profile from a given color transform.
            </summary>
            <param name="transform">A transform.</param>
            <param name="version">The target device link version number in the range 1..4.3.</param>
            <param name="flags">Bit-wise combination of flags.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the same context as the transform.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateLab2(lcmsNET.CIExyY@)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a Lab → Lab identity v2 profile.
            </summary>
            <param name="whitePoint">Lab reference white.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateLab2(lcmsNET.Context,lcmsNET.CIExyY@)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a Lab → Lab identity v2 profile
            in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="whitePoint">Lab reference white.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateLab4(lcmsNET.CIExyY@)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a Lab → Lab identity v4 profile.
            </summary>
            <param name="whitePoint">Lab reference white.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateLab4(lcmsNET.Context,lcmsNET.CIExyY@)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a Lab → Lab identity v4 profile
            in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="whitePoint">Lab reference white.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateXYZ(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a XYZ → XYZ identity v4 profile
            in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Uses the D50 white point in absolute colorimetric intent.
            </para>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Create_sRGB(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for the sRGB color space
            int the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            The sRGB white point is D65.
            </para>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateNull(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a null profile in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateBCHSWabstract(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for an abstract device link
            profile operating in Lab for brightness/contrast/hue/saturation and white point
            translation.
            </summary>
            <param name="nLutPoints">Number of LUT points.</param>
            <param name="bright">Brightness increment, can be negative.</param>
            <param name="contrast">Contrast increment, can be negative.</param>
            <param name="hue">Hue displacement in degrees.</param>
            <param name="saturation">Saturation increment, can be negative.</param>
            <param name="tempSrc">Source white point temperature in °K.</param>
            <param name="tempDest">Destination white point temparature in °K.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.CreateBCHSWabstract(lcmsNET.Context,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for an abstract device link
            profile operating in Lab for brightness/contrast/hue/saturation and white point
            translation.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nLutPoints">Number of lookup table points.</param>
            <param name="bright">Brightness increment, can be negative.</param>
            <param name="contrast">Contrast increment, can be negative.</param>
            <param name="hue">Hue displacement in degrees.</param>
            <param name="saturation">Saturation increment, can be negative.</param>
            <param name="tempSrc">Source white point temperature in °K.</param>
            <param name="tempDest">Destination white point temparature in °K.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Create_OkLab(lcmsNET.Context)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for OkLab color space.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Open(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a file-based ICC profile.
            </summary>
            <param name="filepath">The full path to the file.</param>
            <param name="access">"r" for normal operation, or "w" to create the file.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Open(lcmsNET.Context,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class for a file-based ICC profile
            in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="filepath">The full path to the file.</param>
            <param name="access">"r" for normal operation, or "w" to create the file.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Open(System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class from the supplied
            memory block.
            </summary>
            <param name="memory">A block of contiguous memory containing the entire ICC profile.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Open(lcmsNET.Context,System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class from the supplied
            memory block in the given context.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="memory">A block of contiguous memory containing the entire ICC profile.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Open(lcmsNET.Context,lcmsNET.IOHandler)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class where profile access is described
            by an <see cref="P:lcmsNET.Profile.IOHandler"/>.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="iohandler">An I/O handler.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Open(lcmsNET.Context,lcmsNET.IOHandler,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Profile"/> class where profile access is described
            by an <see cref="P:lcmsNET.Profile.IOHandler"/> that also allows write access to be specified.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="iohandler">An I/O handler.</param>
            <param name="writeable">true to grant write access, or false to open the <see cref="P:lcmsNET.Profile.IOHandler"/> as read-only.</param>
            <returns>A new <see cref="T:lcmsNET.Profile"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Save(System.String)">
            <summary>
            Saves the profile to file.
            </summary>
            <param name="filepath">The full path to the file.</param>
            <returns>true if saved successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.Save(System.Byte[],System.UInt32@)">
            <summary>
            Saves the profile to a contiguous block of memory.
            </summary>
            <param name="memory">An array of bytes large enough to hold the profile, or null to calculate required size.</param>
            <param name="bytesNeeded">Returns the number of bytes written.</param>
            <returns>true if successful, othrwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
            <remarks>
            The calculated size ignores the zero ('\0') terminator saved as the last byte in the memory block, so
            add 1 to ensure that the memory allocated to save the profile is sufficiently sized.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.Save(lcmsNET.IOHandler)">
            <summary>
            Saves the profile to the given <see cref="P:lcmsNET.Profile.IOHandler"/>.
            </summary>
            <param name="iohandler">An I/O handler or null to calculate size only.</param>
            <returns>The number of bytes used to save the profile, or zero on error.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.GetProfileInfo(lcmsNET.InfoType,System.String,System.String)">
            <summary>
            Gets a Unicode (16 bit) string containing the requested information from the profile for a
            given language and country code.
            </summary>
            <param name="info">The information to be obtained.</param>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <returns>A string containing the requested information, or null if not found.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.GetProfileInfoASCII(lcmsNET.InfoType,System.String,System.String)">
            <summary>
            Gets an ASCII (7 bit) string containing the requested information from the profile for a
            given language and country code.
            </summary>
            <param name="info">The information to be obtained.</param>
            <param name="languageCode">The ISO 639-1 language code.</param>
            <param name="countryCode">The ISO 3166-1 country code.</param>
            <returns>A string containing the requested information, or null if not found.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.DetectBlackPoint(lcmsNET.CIEXYZ@,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Estimates the black point of the profile.
            </summary>
            <param name="blackPoint">Returns the black point.</param>
            <param name="intent">The intent.</param>
            <param name="flags">Reserved (unused). Set to <see cref="F:lcmsNET.CmsFlags.None"/>.</param>
            <returns>true if estimated successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.DetectDestinationBlackPoint(lcmsNET.CIEXYZ@,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Estimates the black point of the profile by using the ICC black point compensation algorithm.
            </summary>
            <param name="blackPoint">Returns the black point.</param>
            <param name="intent">The intent.</param>
            <param name="flags">Reserved (unused). Set to <see cref="F:lcmsNET.CmsFlags.None"/>.</param>
            <returns>true if estimated successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.GetHeaderCreationDateTime(System.DateTime@)">
            <summary>
            Gets the date and time when the profile was created.
            </summary>
            <param name="created">Returns the date and time the profile was created.</param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.IsCLUT(lcmsNET.Intent,lcmsNET.UsedDirection)">
            <summary>
            Determines whether the profile contains a CLUT for the given intent and direction.
            </summary>
            <param name="intent">The intent.</param>
            <param name="direction">The direction.</param>
            <returns>true if a CLUT is present, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.DetectRGBGamma(System.Double)">
            <summary>
            Detects whether the profile works in linear (gamma 1.0) space.
            </summary>
            <param name="threshold">The standard deviation above which gamma is returned.</param>
            <returns>Estimated gamma of the RGB space on success, -1 on error.</returns>
            <remarks>
            <para>
            Only RGB profiles, and only those that can be got in both directions.
            </para>
            <para>
            Requires Little CMS version 2.13 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.GetTag(System.UInt32)">
            <summary>
            Gets the tag for the given index.
            </summary>
            <param name="n">The zero-based index of the tag.</param>
            <returns>The tag.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.HasTag(lcmsNET.TagSignature)">
            <summary>
            Gets a value indicating whether the tag is present in the profile.
            </summary>
            <param name="tag">The tag signature.</param>
            <returns>true if the tag is present, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.ReadTag(lcmsNET.TagSignature)">
            <summary>
            Gets a raw pointer to a tag with the given tag signature.
            </summary>
            <param name="tag">The tag signature.</param>
            <returns>A pointer to the tag, or <see cref="F:System.IntPtr.Zero"/> if not found.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.ReadTag``1(lcmsNET.TagSignature)">
            <summary>
            Gets a new instance of type <typeparamref name="T"/> that represents
            the tag with the given tag signature.
            </summary>
            <typeparam name="T">The type for the given tag.</typeparam>
            <param name="tag">The tag signature.</param>
            <returns>A new instance of type <typeparamref name="T"/>.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance as no tag was found with the given tag signature.
            </exception>
            <exception cref="T:System.MissingMethodException">
            Type <typeparamref name="T"/> does not contain a static method with signature
            '<typeparamref name="T"/> FromHandle(<see cref="T:System.IntPtr"/>)'.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.WriteTag``1(lcmsNET.TagSignature,lcmsNET.Impl.TagBase{``0})">
            <summary>
            Writes an object to the profile using the given tag signature.
            </summary>
            <param name="tag">The tag signature.</param>
            <param name="t">A type derived from <see cref="T:lcmsNET.Impl.TagBase`1"/>.</param>
            <returns>true if successfully written, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.WriteTag``1(lcmsNET.TagSignature,``0@)">
            <summary>
            Writes a structure to the profile using the given tag signature.
            </summary>
            <typeparam name="T">The structure type.</typeparam>
            <param name="tag">The tag signature.</param>
            <param name="data">The structure.</param>
            <returns>true if successfully written, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
            <remarks>
            The layout of the structure must correspond with the definitions in Little CMS.
            </remarks>
        </member>
        <member name="M:lcmsNET.Profile.WriteTag(lcmsNET.TagSignature,lcmsNET.ICCData)">
            <summary>
            Writes an <see cref="T:lcmsNET.ICCData"/> instance to the profile using the given tag signature.
            </summary>
            <param name="tag">The tag signature.</param>
            <param name="data">The ICC data.</param>
            <returns>true if successfully written, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.WriteTag(lcmsNET.TagSignature,lcmsNET.UcrBg)">
            <summary>
            Writes an <see cref="T:lcmsNET.UcrBg"/> instance to the profile using the given tag signature.
            </summary>
            <param name="tag">The tag signature.</param>
            <param name="ucrBg">The under color removal and black generation instance.</param>
            <returns>true if successfully written, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.WriteTag(lcmsNET.TagSignature,lcmsNET.VideoCardGamma)">
            <summary>
            Writes a <see cref="T:lcmsNET.VideoCardGamma"/> instance to the profile using the given tag signature.
            </summary>
            <param name="tag">The tag signature.</param>
            <param name="vcgt">The video card gamma table instance.</param>
            <returns>true if successfully written, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.LinkTag(lcmsNET.TagSignature,lcmsNET.TagSignature)">
            <summary>
            Creates a directory entry on tag <paramref name="tag"/> that points to the same location
            as tag <paramref name="dest"/> to collapse several tag entries to the same block in the
            profile.
            </summary>
            <param name="tag">The tag signature of the linking tag.</param>
            <param name="dest">The tag signature of the linked tag.</param>
            <returns>true if linked successfully, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.TagLinkedTo(lcmsNET.TagSignature)">
            <summary>
            Gets the tag signature of the tag linked to the given tag.
            </summary>
            <param name="tag">The tag signature of the linking tag.</param>
            <returns>The tag signature of the linked tag, or (<see cref="T:lcmsNET.TagSignature"/>)0 if not linked.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.IsIntentSupported(lcmsNET.Intent,lcmsNET.UsedDirection)">
            <summary>
            Gets a value indicating whether the given intent is implemented in the profile
            for the supplied direction.
            </summary>
            <param name="intent">The intent.</param>
            <param name="usedDirection">The direction.</param>
            <returns>true if implemented, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.ComputeMD5">
            <summary>
            Calculates and sets the profile ID in the header of the profile.
            </summary>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.GetPostScriptColorResource(lcmsNET.Context,lcmsNET.PostScriptResourceType,lcmsNET.Intent,lcmsNET.CmsFlags,lcmsNET.IOHandler)">
            <summary>
            Creates a PostScript color resource.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="type">The PostScript resource type to be created.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags.</param>
            <param name="handler">An I/O handler.</param>
            <returns>The size of the resource in bytes, or 0 on error.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.GetPostScriptColorSpaceArray(lcmsNET.Context,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates and returns a contiguous block of memory containing a PostScript color space array.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags.</param>
            <returns>An array of bytes containing the PostScript color space array, or null on error.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.GetPostScriptColorRenderingDictionary(lcmsNET.Context,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates and returns a contiguous block of memory containing a PostScript color rendering dictionary.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags.</param>
            <returns>An array of bytes containing the PostScript color rendering dictionary, or null on error.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="P:lcmsNET.Profile.ColorSpace">
            <summary>
            Gets or sets the color space used by the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.PCS">
            <summary>
            Gets or sets the profile connection space used by the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.TotalAreaCoverage">
            <summary>
            Estimates the percentage total area coverage (total dot percentage) for the profile.
            </summary>
            <remarks>
            Non-output profiles yield a value of 0%.
            </remarks>
        </member>
        <member name="P:lcmsNET.Profile.DeviceClass">
            <summary>
            Gets or sets the device class signature in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.HeaderFlags">
            <summary>
            Gets or sets the flags in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.HeaderManufacturer">
            <summary>
            Gets or sets the signature of the device manufacturer in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.HeaderModel">
            <summary>
            Gets or sets the signature of the device model in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.HeaderAttributes">
            <summary>
            Gets or sets the attributes unique to the particular device setup for which
            the profile is applicable in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.Version">
            <summary>
            Gets or sets the ICC version in the header of the profile in floating point format.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.EncodedICCVersion">
            <summary>
            Gets or sets the ICC version in the format as stored in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.IsMatrixShaper">
            <summary>
            Gets a value indicating whether a matrix shaper is present in the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.TagCount">
            <summary>
            Gets the number of tags in the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.HeaderRenderingIntent">
            <summary>
            Gets or sets the rendering intent in the header of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.Profile.HeaderProfileID">
            <summary>
            Gets or sets the profile ID in the header of the profile. 
            </summary>
            <value>An array of 16 bytes defining the computed MD5 value for the profile.</value>
            <remarks>
            <para>
            The profile ID shall be calculated using the MD5 fingerprinting method as defined in Internet RFC 1321.
            </para>
            <para>
            The profile ID can be calculated and set using <see cref="M:lcmsNET.Profile.ComputeMD5"/>.
            </para>
            </remarks>
        </member>
        <member name="P:lcmsNET.Profile.IOHandler">
            <summary>
            Gets the I/O handler used by the profile.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Profile.ReleaseHandle">
            <summary>
            Frees the profile handle.
            </summary>
        </member>
        <member name="T:lcmsNET.ProfileSequenceDescriptor">
            <summary>
            Represents a profile sequence descriptor.
            </summary>
        </member>
        <member name="M:lcmsNET.ProfileSequenceDescriptor.FromHandle(System.IntPtr)">
            <summary>
            Creates a profile sequence descriptor from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing profile sequence descriptor.</param>
            <returns>
            A new <see cref="T:lcmsNET.ProfileSequenceDescriptor"/> instance referencing an
            existing profile sequence descriptor.
            </returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            The <paramref name="handle"/> is <see cref="F:System.IntPtr.Zero"/>.
            </exception>
        </member>
        <member name="M:lcmsNET.ProfileSequenceDescriptor.Create(lcmsNET.Context,System.UInt32)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.ProfileSequenceDescriptor"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nItems">The number of profiles in the sequence.</param>
            <returns>A new <see cref="T:lcmsNET.ProfileSequenceDescriptor"/>.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.ProfileSequenceDescriptor.Duplicate">
            <summary>
            Duplicates a profile sequence descriptor.
            </summary>
            <returns>A new <see cref="T:lcmsNET.ProfileSequenceDescriptor"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The ProfileSequenceDescriptor has already been disposed.
            </exception>
        </member>
        <member name="P:lcmsNET.ProfileSequenceDescriptor.Length">
            <summary>
            Gets the number of profiles in the sequence.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceDescriptor.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:lcmsNET.ProfileSequenceItem"/> at a given index position.
            </summary>
            <param name="index">The index position.</param>
            <returns>A <see cref="T:lcmsNET.ProfileSequenceItem"/>.</returns>
        </member>
        <member name="M:lcmsNET.ProfileSequenceDescriptor.ReleaseHandle">
            <summary>
            Frees the profile sequence descriptor.
            </summary>
        </member>
        <member name="T:lcmsNET.ProfileSequenceItem">
            <summary>
            Represents an item in a profile sequence.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.DeviceMfg">
            <summary>
            Gets or sets the signature of the device manufacturer of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.DeviceModel">
            <summary>
            Gets or sets the signature of the device model of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.Attributes">
            <summary>
            Gets or sets the attributes unique to the particular device setup for which
            the profile is applicable.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.Technology">
            <summary>
            Gets or sets the ICC technology of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.ProfileID">
            <summary>
            Gets or sets the profile ID of the profile.
            </summary>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.Manufacturer">
            <summary>
            Gets or sets the manufacturer string of the profile.
            </summary>
            <remarks>
            Responsibility for freeing resources associated with the <see cref="T:lcmsNET.MultiLocalizedUnicode"/>
            object used to set the value is passed to the <see cref="T:lcmsNET.ProfileSequenceItem"/>.
            </remarks>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.Model">
            <summary>
            Gets or sets the model string of the profile.
            </summary>
            <remarks>
            Responsibility for freeing resources associated with the <see cref="T:lcmsNET.MultiLocalizedUnicode"/>
            object used to set the value is passed to the <see cref="T:lcmsNET.ProfileSequenceItem"/>.
            </remarks>
        </member>
        <member name="P:lcmsNET.ProfileSequenceItem.Description">
            <summary>
            Gets or sets the description of the profile.
            </summary>
            <remarks>
            Responsibility for freeing resources associated with the <see cref="T:lcmsNET.MultiLocalizedUnicode"/>
            object used to set the value is passed to the <see cref="T:lcmsNET.ProfileSequenceItem"/>.
            </remarks>
        </member>
        <member name="T:lcmsNET.SpotShape">
            <summary>
            Defines spot shapes.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Unknown">
            <summary>
            Unknown spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.PrinterDefault">
            <summary>
            Printer default spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Round">
            <summary>
            Round spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Diamond">
            <summary>
            Diamond spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Ellipse">
            <summary>
            Elliptical spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Line">
            <summary>
            Line spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Square">
            <summary>
            Square spot shape.
            </summary>
        </member>
        <member name="F:lcmsNET.SpotShape.Cross">
            <summary>
            Cross spot shape.
            </summary>
        </member>
        <member name="T:lcmsNET.ScreeningChannel">
            <summary>
            Represents a screening channel.
            </summary>
        </member>
        <member name="F:lcmsNET.ScreeningChannel.Frequency">
            <summary>
            Frequency.
            </summary>
        </member>
        <member name="F:lcmsNET.ScreeningChannel.ScreenAngle">
            <summary>
            Screen angle.
            </summary>
        </member>
        <member name="F:lcmsNET.ScreeningChannel.SpotShape">
            <summary>
            Spot shape.
            </summary>
        </member>
        <member name="T:lcmsNET.ScreeningFlags">
            <summary>
            Defines screening flags.
            </summary>
        </member>
        <member name="F:lcmsNET.ScreeningFlags.FrequencyUnitLinesCm">
            <summary>
            Frequency unit is lines per centimetre.
            </summary>
        </member>
        <member name="F:lcmsNET.ScreeningFlags.PrinterDefaultScreens">
            <summary>
            Printer default screens.
            </summary>
        </member>
        <member name="F:lcmsNET.ScreeningFlags.FrequencyUnitLinesInch">
            <summary>
            Frequency unit is lines per inch.
            </summary>
        </member>
        <member name="T:lcmsNET.Screening">
            <summary>
            Represents screening information.
            </summary>
        </member>
        <member name="F:lcmsNET.Screening.Flag">
            <summary>
            Screening flags.
            </summary>
        </member>
        <member name="F:lcmsNET.Screening.nChannels">
            <summary>
            Number of screening channels defined for use.
            </summary>
        </member>
        <member name="F:lcmsNET.Screening.Channels">
            <summary>
            Screening channels.
            </summary>
        </member>
        <member name="M:lcmsNET.Screening.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.Screening"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.Screening"/> instance.</returns>
        </member>
        <member name="M:lcmsNET.Screening.#ctor(lcmsNET.ScreeningFlags,System.UInt32,lcmsNET.ScreeningChannel[])">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.Screening"/> class.
            </summary>
            <param name="flag">The screening flags.</param>
            <param name="nchannels">The number of screening channels defined for use.</param>
            <param name="channels">An array of 16 screening channels.</param>
        </member>
        <member name="T:lcmsNET.Signature">
            <summary>
            Represents a signature.
            </summary>
        </member>
        <member name="M:lcmsNET.Signature.#ctor(System.UInt32)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.Signature"/> class.
            </summary>
            <param name="u">The signature value.</param>
        </member>
        <member name="M:lcmsNET.Signature.op_Implicit(lcmsNET.Signature)~System.UInt32">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.Signature"/> to an unsigned integer.
            </summary>
            <param name="signature">The <see cref="T:lcmsNET.Signature"/> to be converted.</param>
        </member>
        <member name="M:lcmsNET.Signature.op_Explicit(System.UInt32)~lcmsNET.Signature">
            <summary>
            Explicitly converts an unsigned integer to a <see cref="T:lcmsNET.Signature"/>.
            </summary>
            <param name="u">The unsigned integer to be converted.</param>
        </member>
        <member name="M:lcmsNET.Signature.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.Signature"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.Signature"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.StageSamplingFlags">
            <summary>
            Defines the flags to control stage sampling.
            </summary>
        </member>
        <member name="F:lcmsNET.StageSamplingFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:lcmsNET.StageSamplingFlags.Inspect">
            <summary>
            CLUT is to be accessed as read-only.
            </summary>
        </member>
        <member name="T:lcmsNET.Sampler16">
            <summary>
            Defines a delegate that can used to populate CLUT stages in a way that is
            independent of the number of nodes.
            </summary>
            <param name="input">The node coordinates.</param>
            <param name="output">The contents of the CLUT on the node.</param>
            <param name="cargo">User supplied content.</param>
        </member>
        <member name="T:lcmsNET.SamplerFloat">
            <summary>
            Defines a delegate that can used to populate CLUT stages in a way that is
            independent of the number of nodes.
            </summary>
            <param name="input">The node coordinates.</param>
            <param name="output">The contents of the CLUT on the node.</param>
            <param name="cargo">User supplied content.</param>
        </member>
        <member name="T:lcmsNET.StageEvalFn">
            <summary>
            Defines a delegate that can be used to evaluate a stage.
            </summary>
            <param name="In">Pointer to a const array of floats.</param>
            <param name="Out">Pointer to an array of floats.</param>
            <param name="mpe">Pointer to a stage.</param>
        </member>
        <member name="T:lcmsNET.StageDupElemFn">
            <summary>
            Defines a delegate that can be used to duplicate private data.
            </summary>
            <param name="mpe">A pointer to a stage.</param>
            <returns>A pointer to the duplicated data.</returns>
        </member>
        <member name="T:lcmsNET.StageFreeElemFn">
            <summary>
            Defines a delegate that can be used to free private data.
            </summary>
            <param name="mpe">A pointer to a stage.</param>
        </member>
        <member name="T:lcmsNET.Stage">
            <summary>
            Represents a stage in a pipeline.
            </summary>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.UInt32)">
            <summary>
            Creates new instance of the <see cref="T:lcmsNET.Stage"/> class for an empty stage that performs no operation.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nChannels">The number of channels.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.UInt32,lcmsNET.ToneCurve[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Stage"/> class that contains tone curves.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nChannels">The number of tone curves.</param>
            <param name="curves">An array of <paramref name="nChannels"/> tone curves, or null to use identity curves.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.Double[0:,0:],System.Double[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Stage"/> class that contains a matrix and optional offset.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="matrix">A matrix of [rows, columns].</param>
            <param name="offset">A vector of [columns] offsets, or null if no offset is to be applied.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.UInt32,System.UInt32,System.UInt32,System.UInt16[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Stage"/> class that contains a 16 bit multi-dimensional lookup table (CLUT)
            where each dimension has the same size.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nGridPoints">The number of nodes (same for each component).</param>
            <param name="inputChannels">The number of input channels.</param>
            <param name="outputChannels">The number of output channels.</param>
            <param name="table">An array of initial values for the nodes, or null if the CLUT is to be initialised to zero.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.UInt32,System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Stage"/> class that contains a floating point multi-dimensional lookup table (CLUT)
            where each dimension has the same size.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="nGridPoints">The number of nodes (same for each component).</param>
            <param name="inputChannels">The number of input channels.</param>
            <param name="outputChannels">The number of output channels.</param>
            <param name="table">An array of initial values for the nodes, or null if the CLUT is to be initialised to zero.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.UInt32[],System.UInt32,System.UInt16[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Stage"/> class that contains a 16 bit multi-dimensional lookup table (CLUT)
            where each dimension can have a different size.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="clutPoints">An array of [input channels] values containing the number of nodes for each component.</param>
            <param name="outputChannels">The number of output channels.</param>
            <param name="table">An array of initial values for the nodes, or null if the CLUT is to be initialised to zero.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Create(lcmsNET.Context,System.UInt32[],System.UInt32,System.Single[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Stage"/> class that contains a floating point multi-dimensional lookup table (CLUT)
            where each dimension can have a different size.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="clutPoints">An array of [inputChannels] values containing the number of nodes for each component.</param>
            <param name="outputChannels">The number of output channels.</param>
            <param name="table">An array of initial values for the nodes, or null if the CLUT is to be initialised to zero.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.AllocPlaceholder(lcmsNET.Context,lcmsNET.StageSignature,System.UInt32,System.UInt32,lcmsNET.StageEvalFn,lcmsNET.StageDupElemFn,lcmsNET.StageFreeElemFn,System.IntPtr)">
            <summary>
            Creates a new stage type.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="type">A <see cref="T:lcmsNET.StageSignature"/> for the type.</param>
            <param name="inputChannels">The number of input channels.</param>
            <param name="outputChannels">The number of output channels.</param>
            <param name="evalFn">A delegate to evaluate the stage.</param>
            <param name="dupElemFnm">A delegate to duplicate data if user data is being used, can be null.</param>
            <param name="freeElemFn">A delegate to free data if user data is being used, can be null.</param>
            <param name="data">Pointer to user data or <see cref="F:System.IntPtr.Zero"/> if no data is needed.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.FromHandle(System.IntPtr)">
            <summary>
            Creates a stage from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing stage.</param>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance referencing an existing stage.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            The <paramref name="handle"/> is <see cref="F:System.IntPtr.Zero"/>.
            </exception>
        </member>
        <member name="M:lcmsNET.Stage.Duplicate">
            <summary>
            Duplicates a stage.
            </summary>
            <returns>A new <see cref="T:lcmsNET.Stage"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The Stage has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Stage.SampleCLUT(lcmsNET.Sampler16,System.IntPtr,lcmsNET.StageSamplingFlags)">
            <summary>
            Iterates on all nodes of the stage calling a 16-bit sampler on each node.
            </summary>
            <param name="sampler">The callback to be executed on each node.</param>
            <param name="cargo">A user-supplied value to be passed to the callback.</param>
            <param name="flags">Flags to control stage sampling.</param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Stage has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Stage.SampleCLUT(lcmsNET.SamplerFloat,System.IntPtr,lcmsNET.StageSamplingFlags)">
            <summary>
            Iterates on all nodes of the stage calling a floating point sampler on each node.
            </summary>
            <param name="sampler">The callback to be executed on each node.</param>
            <param name="cargo">A user-supplied value to be passed to the callback.</param>
            <param name="flags">Flags to control stage sampling.</param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Stage has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Stage.SliceSpace(System.UInt32[],lcmsNET.Sampler16,System.IntPtr)">
            <summary>
            Slices the target space calling a 16-bit sampler on each node.
            </summary>
            <param name="clutPoints">An array holding the division slices for each component.</param>
            <param name="sampler">The callback to be executed on each node.</param>
            <param name="cargo">A user-supplied value to be passed to the callback.</param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="clutPoints"/> is null or array size is zero.
            </exception>
            <remarks>
            When invoked, the <see cref="T:lcmsNET.Sampler16"/> 'output' parameter is set to null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.SliceSpace(System.UInt32[],lcmsNET.SamplerFloat,System.IntPtr)">
            <summary>
            Slices the target space calling a 16-bit sampler on each node.
            </summary>
            <param name="clutPoints">An array holding the division slices for each component.</param>
            <param name="sampler">The callback to be executed on each node.</param>
            <param name="cargo">A user-supplied value to be passed to the callback.</param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="clutPoints"/> is null or array size is zero.
            </exception>
            <remarks>
            When invoked, the <see cref="T:lcmsNET.SamplerFloat"/> 'output' parameter is set to null.
            </remarks>
        </member>
        <member name="M:lcmsNET.Stage.Release">
            <summary>
            Releases ownership of the stage.
            </summary>
            <returns>The pointer to the stage.</returns>
        </member>
        <member name="P:lcmsNET.Stage.InputChannels">
            <summary>
            Gets the number of input channels in the stage.
            </summary>
        </member>
        <member name="P:lcmsNET.Stage.OutputChannels">
            <summary>
            Gets the number of output channels in the stage.
            </summary>
        </member>
        <member name="P:lcmsNET.Stage.StageType">
            <summary>
            Gets the stage type.
            </summary>
        </member>
        <member name="P:lcmsNET.Stage.Data">
            <summary>
            Gets the user data associated with the stage.
            </summary>
        </member>
        <member name="M:lcmsNET.Stage.ReleaseHandle">
            <summary>
            Frees the stage handle.
            </summary>
        </member>
        <member name="T:lcmsNET.Tm">
            <summary>
            Represents a calendar date and time broken into its components.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.sec">
            <summary>
            Seconds after the minute in the range 0..61.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.min">
            <summary>
            Minutes after the hour in the range 0..59.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.hour">
            <summary>
            Hours since midnight in the range 0..23.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.mday">
            <summary>
            Day of the month in the range 1..31.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.mon">
            <summary>
            Month of the year in the range 0..11.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.year">
            <summary>
            Years since 1900.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.wday">
            <summary>
            Days since Sunday in the range 0..6.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.yday">
            <summary>
            Days since January 1 in the range 0..365.
            </summary>
        </member>
        <member name="F:lcmsNET.Tm.isdst">
            <summary>
            Daylight saving time flag. Greater than zero if Daylight Savings is in effect,
            zero if not in effect or less than zero if information is not available.
            </summary>
        </member>
        <member name="M:lcmsNET.Tm.FromHandle(System.IntPtr)">
            <summary>
            Creates a <see cref="T:lcmsNET.Tm"/> from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing calendar date and time.</param>
            <returns>A new <see cref="T:lcmsNET.Tm"/> instance referencing an existing calendar date and time.</returns>
        </member>
        <member name="M:lcmsNET.Tm.op_Implicit(lcmsNET.Tm@)~System.DateTime">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.Tm"/> to a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="tm">The <see cref="T:lcmsNET.Tm"/> to be converted.</param>
        </member>
        <member name="M:lcmsNET.Tm.op_Implicit(lcmsNET.Tm@)~lcmsNET.DateTimeNumber">
            <summary>
            Implicitly converts a <see cref="T:lcmsNET.Tm"/> to a <see cref="T:lcmsNET.DateTimeNumber"/>.
            </summary>
            <param name="tm"></param>
        </member>
        <member name="M:lcmsNET.Tm.#ctor(System.DateTime)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Tm"/> structure.
            </summary>
            <param name="date">A <see cref="T:System.DateTime"/> instance.</param>
        </member>
        <member name="M:lcmsNET.Tm.#ctor(lcmsNET.DateTimeNumber)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Tm"/> structure.
            </summary>
            <param name="date">A <see cref="T:lcmsNET.DateTimeNumber"/> instance.</param>
        </member>
        <member name="T:lcmsNET.CurveSegment">
            <summary>
            Represents a segment of a curve.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegment.x0">
            <summary>
            Domain; for <see cref="F:lcmsNET.CurveSegment.x0"/> &lt; 'x'.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegment.x1">
            <summary>
            Domain; for 'x' &lt;= <see cref="F:lcmsNET.CurveSegment.x1"/>.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegment.type">
            <summary>
            Parametric type, where 0 means sampled and negative values are reserved.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegment.parameters">
            <summary>
            Parameters if <see cref="F:lcmsNET.CurveSegment.type"/> != 0.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegment.nGridPoints">
            <summary>
            Number of grid points if <see cref="F:lcmsNET.CurveSegment.type"/> == 0.
            </summary>
        </member>
        <member name="F:lcmsNET.CurveSegment.sampledPoints">
            <summary>
            Pointer to a floating point array of size <see cref="F:lcmsNET.CurveSegment.nGridPoints"/> if <see cref="F:lcmsNET.CurveSegment.type"/> == 0.
            </summary>
        </member>
        <member name="M:lcmsNET.CurveSegment.FromHandle(System.IntPtr)">
            <summary>
            Marshals data from an unmanaged block of memory to a newly allocated <see cref="T:lcmsNET.CurveSegment"/> object.
            </summary>
            <param name="handle">A handle to the unmanaged block of memory.</param>
            <returns>A new <see cref="T:lcmsNET.CurveSegment"/> instance.</returns>
        </member>
        <member name="T:lcmsNET.ToneCurve">
            <summary>
            Represents a tone curve.
            </summary>
        </member>
        <member name="M:lcmsNET.ToneCurve.FromHandle(System.IntPtr)">
            <summary>
            Creates a tone curve from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing tone curve.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance referencing an existing tone curve.</returns>
        </member>
        <member name="M:lcmsNET.ToneCurve.BuildParametric(lcmsNET.Context,System.Int32,System.Double[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.ToneCurve"/> class for a parametric curve.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="type">The parametric tone curve number.</param>
            <param name="parameters">An array of 10 values defining the tone curve parameters for the given <paramref name="type"/>.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.BuildGamma(lcmsNET.Context,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.ToneCurve"/> class for a gamma tone curve.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="gamma">The value of the gamma exponent.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.BuildSegmented(lcmsNET.Context,lcmsNET.CurveSegment[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.ToneCurve"/> class from the given segment information.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="segments">An array of segments.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.GetCurveSegment(System.Int32)">
            <summary>
            Gets the curve segment at the specified index.
            </summary>
            <param name="segmentIndex">The zero-based index of the curve segment to be obtained.</param>
            <returns>The <see cref="T:lcmsNET.CurveSegment"/> at the specified index.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index is out of range.
            </exception>
            <remarks>
            <para>
            Requires Little CMS version 2.16 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.BuildTabulated(lcmsNET.Context,System.UInt16[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.ToneCurve"/> class from the given 16-bit values.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="values">An array of 16-bit values.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.BuildTabulated(lcmsNET.Context,System.Single[])">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.ToneCurve"/> class from the given floating point values.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="values">An array of floating point values.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.Duplicate">
            <summary>
            Duplicates a tone curve.
            </summary>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.Reverse">
            <summary>
            Creates a tone curve that is the inverse ƒ⁻¹ of this instance.
            </summary>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.Reverse(System.Int32)">
            <summary>
            Creates a tone curve that is the inverse ƒ⁻¹ of this instance or a tabulated
            curve of <paramref name="nResultSamples"/> if it could not be reversed analytically.
            </summary>
            <param name="nResultSamples">
            Number of samples to use in case the tone curve cannot be reversed analytically.
            </param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.Join(lcmsNET.Context,lcmsNET.ToneCurve,System.Int32)">
            <summary>
            Composites two tone curves in the form Y⁻¹(X(t)).
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="other">The other tone curve 'X'.</param>
            <param name="nPoints">Sample rate for the resulting tone curve.</param>
            <returns>A new <see cref="T:lcmsNET.ToneCurve"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="other"/> is null.
            </exception>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.Smooth(System.Double)">
            <summary>
            Smoothes the tone curve according to the <paramref name="lambda"/> parameter.
            </summary>
            <param name="lambda">The degree of smoothing.</param>
            <returns>true if smoothing was successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.Evaluate(System.Single)">
            <summary>
            Evaluates the given floating point number across the tone curve.
            </summary>
            <param name="v">The value to evaluate.</param>
            <returns>The value evaluated across the tone curve.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.Evaluate(System.UInt16)">
            <summary>
            Evaluates the given 16-bit number across the tone curve.
            </summary>
            <param name="v">The value to evaluate.</param>
            <returns>The value evaluated across the tone curve.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.ToneCurve.EstimateGamma(System.Double)">
            <summary>
            Estimates the apparent gamma of the tone curve using a least square fit to a
            pure exponent expression in the ƒ(x)=x^𝛾.
            </summary>
            <param name="precision">The maximum standard deviation allowed on the residuals.</param>
            <returns>The estimated gamma at the given precision, or -1 if the fitting has less precision.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The ToneCurve has already been disposed.
            </exception>
            <remarks>
            <para>
            A value of 0.01 is a fair value for <paramref name="precision"/>. Set to a large number to fit any
            curve no matter good the fit.
            </para>
            <para>
            The 𝛾 is estimated at the given precision.
            </para>
            </remarks>
        </member>
        <member name="P:lcmsNET.ToneCurve.IsMultisegment">
            <summary>
            Gets a value indicating whether the tone curve contains more than one segment.
            </summary>
        </member>
        <member name="P:lcmsNET.ToneCurve.IsLinear">
            <summary>
            Gets a value indicating whether the tone curve is linear.
            </summary>
            <remarks>
            This is just a coarse approximation with no mathematical validity that does not
            take unbounded parts into account.
            </remarks>
        </member>
        <member name="P:lcmsNET.ToneCurve.IsMonotonic">
            <summary>
            Gets a value indicating whether the tone curve is monotonic.
            </summary>
            <remarks>
            This is just a coarse approximation with no mathematical validity that does not
            take unbounded parts into account.
            </remarks>
        </member>
        <member name="P:lcmsNET.ToneCurve.IsDescending">
            <summary>
            Returns true if (0) > ƒ(1), otherwise false.
            </summary>
            <remarks>
            Does not take unbounded parts into account.
            </remarks>
        </member>
        <member name="P:lcmsNET.ToneCurve.EstimatedTableEntries">
            <summary>
            Gets the number of entries in the maintained shadow low-resolution tabulated
            representation of the tone curve.
            </summary>
            <remarks>
            Requires Little CMS version 2.4 or later.
            </remarks>
        </member>
        <member name="P:lcmsNET.ToneCurve.EstimatedTable">
            <summary>
            Gets a pointer to the maintained shadow low-resolution tabulated
            representation of the tone curve.
            </summary>
            <remarks>
            Requires Little CMS version 2.4 or later.
            </remarks>
        </member>
        <member name="M:lcmsNET.ToneCurve.ReleaseHandle">
            <summary>
            Frees the tone curve.
            </summary>
        </member>
        <member name="T:lcmsNET.Transform">
            <summary>
            Represents a color transform.
            </summary>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Profile,System.UInt32,lcmsNET.Profile,System.UInt32,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class.
            </summary>
            <param name="input">A profile capable to work in the input direction.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="output">A profile capable to work in the output direction.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_Lab_8"/>.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Context,lcmsNET.Profile,System.UInt32,lcmsNET.Profile,System.UInt32,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="input">A profile capable to work in the input direction.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="output">A profile capable to work in the output direction.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_Lab_8"/>.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Profile,System.UInt32,lcmsNET.Profile,System.UInt32,lcmsNET.Profile,lcmsNET.Intent,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class for a proofing transform.
            </summary>
            <param name="input">A profile capable to work in the input direction.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="output">A profile capable to work in the output direction.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_Lab_8"/>.</param>
            <param name="proofing">A proofing profile.</param>
            <param name="intent">The intent.</param>
            <param name="proofingIntent">The proofing intent.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            To enable proofing and gamut check include <see cref="F:lcmsNET.CmsFlags.SoftProofing"/>|<see cref="F:lcmsNET.CmsFlags.GamutCheck"/>.
            </para>
            <para>
            Creates the instance in the global context.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Context,lcmsNET.Profile,System.UInt32,lcmsNET.Profile,System.UInt32,lcmsNET.Profile,lcmsNET.Intent,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class for a proofing transform.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="input">A profile capable to work in the input direction.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="output">A profile capable to work in the output direction.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_Lab_8"/>.</param>
            <param name="proofing">A proofing profile.</param>
            <param name="intent">The intent.</param>
            <param name="proofingIntent">The proofing intent.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            To enable proofing and gamut check include <see cref="F:lcmsNET.CmsFlags.SoftProofing"/>|<see cref="F:lcmsNET.CmsFlags.GamutCheck"/>.
            </para>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Profile[],System.UInt32,System.UInt32,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class for a multiprofile transform.
            </summary>
            <param name="profiles">An array of profiles.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_Lab_8"/>.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Context,lcmsNET.Profile[],System.UInt32,System.UInt32,lcmsNET.Intent,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class for a multiprofile transform.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="profiles">An array of profiles.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_Lab_8"/>.</param>
            <param name="intent">The intent.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.Create(lcmsNET.Context,lcmsNET.Profile[],System.Boolean[],lcmsNET.Intent[],System.Double[],lcmsNET.Profile,System.Int32,System.UInt32,System.UInt32,lcmsNET.CmsFlags)">
            <summary>
            Creates a new instance of the <see cref="T:lcmsNET.Transform"/> class for a multiprofile transform
            exposing all parameters for each profile in the chain.
            </summary>
            <param name="context">A <see cref="T:lcmsNET.Context"/>, or null for the global context.</param>
            <param name="profiles">An array of profiles.</param>
            <param name="bpc">An array of black point compensation states.</param>
            <param name="intents">An array of intents.</param>
            <param name="adaptationStates">An array of adaptation states.</param>
            <param name="gamut">A profile holding gamut information for a gamut check, can be null.</param>
            <param name="gamutPCSPosition">Position in the chain of Lab/XYZ PCS to check gamut.</param>
            <param name="inputFormat">The input format, e.g., <see cref="F:lcmsNET.Cms.TYPE_RGB_8"/>.</param>
            <param name="outputFormat">The output format, e.g. <see cref="F:lcmsNET.Cms.TYPE_XYZ_16"/>.</param>
            <param name="flags">The flags to control the process.</param>
            <returns>A new <see cref="T:lcmsNET.Transform"/> instance.</returns>
            <exception cref="T:lcmsNET.LcmsNETException">
            Failed to create instance.
            </exception>
            <remarks>
            <para>
            <paramref name="gamut"/> and <paramref name="gamutPCSPosition"/> are only used if
            <paramref name="flags"/> includes <see cref="F:lcmsNET.CmsFlags.GamutCheck"/>.
            </para>
            <para>
            Creates the instance in the global context if <paramref name="context"/> is null.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.DoTransform(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Translates a bitmap according to the parameters setup when creating the transform.
            </summary>
            <param name="inputBuffer">An array of bytes containing the input bitmap.</param>
            <param name="outputBuffer">An array of bytes to contain the output bitmap.</param>
            <param name="pixelCount">The number of pixels to be transformed.</param>
            <exception cref="T:System.ObjectDisposedException">
            The Profile has already been disposed.
            </exception>
        </member>
        <member name="M:lcmsNET.Transform.DoTransform(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Translates a bitmap according to the parameters setup when creating the transform.
            </summary>
            <param name="inputBuffer">An array of bytes containing the input bitmap.</param>
            <param name="outputBuffer">An array of bytes to contain the output bitmap.</param>
            <param name="pixelsPerLine">The number of pixels per line; same on input and in output.</param>
            <param name="lineCount">The number of lines; same on input as in output.</param>
            <param name="bytesPerLineIn">The distance in bytes from one line to the next on the input bitmap.</param>
            <param name="bytesPerLineOut">The distance in bytes from one line to the next in the output bitmap.</param>
            <param name="bytesPerPlaneIn">The distance in bytes from one plane to the next inside a line on the input bitmap.</param>
            <param name="bytesPerPlaneOut">The distance in bytes from one plane to the next inside a line in the output bitmap.</param>
            <exception cref="T:System.ObjectDisposedException">
            The Transform has already been disposed.
            </exception>
            <remarks>
            <para>
            <paramref name="bytesPerPlaneIn"/> and <paramref name="bytesPerPlaneOut"/> are only used in planar formats.
            </para>
            <para>
            Requires Little CMS version 2.8 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.ChangeBuffersFormat(System.UInt32,System.UInt32)">
            <summary>
            Changes the encoding of buffers in a transform originally created with at least 16 bits of precision.
            </summary>
            <param name="inputFormat">The input format.</param>
            <param name="outputFormat">The output format.</param>
            <returns>true if successful, otherwise false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Transform has already been disposed.
            </exception>
            <remarks>
            <para>
            This method is provided for backwards compatibility and should be avoided whenever possible.
            </para>
            <para>
            Requires Little CMS version 2.1 or later.
            </para>
            </remarks>
        </member>
        <member name="P:lcmsNET.Transform.InputFormat">
            <summary>
            Gets the input format of the transform, or 0 if the instance has been disposed.
            </summary>
            <remarks>
            <para>
            Requires Little CMS version 2.2 or later.
            </para>
            </remarks>
        </member>
        <member name="P:lcmsNET.Transform.OutputFormat">
            <summary>
            Gets the output format of the transform, or 0 if the instance has been disposed.
            </summary>
            <remarks>
            <para>
            Requires Little CMS version 2.2 or later.
            </para>
            </remarks>
        </member>
        <member name="P:lcmsNET.Transform.NamedColorList">
            <summary>
            Gets a named color list from the transform.
            </summary>
        </member>
        <member name="P:lcmsNET.Transform.UserData">
            <summary>
            Gets the pointer to the user data associated with the transform.
            </summary>
            <remarks>
            <para>
            Requires Little CMS version 2.4 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.SetUserData(System.IntPtr,lcmsNET.FreeUserData)">
            <summary>
            Sets the user data associated with the transform.
            </summary>
            <param name="userData">The pointer to user data to be associated with the transform.</param>
            <param name="fn">The delegate that can be used to free the user data.</param>
            <exception cref="T:System.ObjectDisposedException">
            The Transform has already been disposed.
            </exception>
            <remarks>
            <para>
            Requires Little CMS version 2.4 or later.
            </para>
            </remarks>
        </member>
        <member name="P:lcmsNET.Transform.Flags">
            <summary>
            Gets the original flags used when creating the transform.
            </summary>
            <remarks>
            <para>
            Requires Little CMS version 2.12 or later.
            </para>
            </remarks>
        </member>
        <member name="M:lcmsNET.Transform.ReleaseHandle">
            <summary>
            Frees the transform handle.
            </summary>
        </member>
        <member name="T:lcmsNET.UcrBg">
            <summary>
            Represents an under color removal and black generation.
            </summary>
        </member>
        <member name="M:lcmsNET.UcrBg.FromHandle(System.IntPtr)">
            <summary>
            Creates an under color removal and black generation from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing under color removal and black generation.</param>
            <returns>A new <see cref="T:lcmsNET.UcrBg"/> instance referencing an existing under color removal and black generation.</returns>
        </member>
        <member name="M:lcmsNET.UcrBg.#ctor(lcmsNET.ToneCurve,lcmsNET.ToneCurve,lcmsNET.MultiLocalizedUnicode)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.UcrBg"/> class.
            </summary>
            <param name="ucr">A tone curve for under color removal.</param>
            <param name="bg">A tone curve for black generation.</param>
            <param name="desc">A description of the method used for under color removal and black generation.</param>
        </member>
        <member name="P:lcmsNET.UcrBg.Ucr">
            <summary>
            Gets the under color removal tone curve.
            </summary>
        </member>
        <member name="P:lcmsNET.UcrBg.Bg">
            <summary>
            Gets the black generation tone curve.
            </summary>
        </member>
        <member name="P:lcmsNET.UcrBg.Desc">
            <summary>
            Gets the description of the method used for under color removal and black generation.
            </summary>
        </member>
        <member name="T:lcmsNET.VideoCardGamma">
            <summary>
            Represents a video card gamma table.
            </summary>
        </member>
        <member name="M:lcmsNET.VideoCardGamma.FromHandle(System.IntPtr)">
            <summary>
            Creates a video card gamma table from the supplied handle.
            </summary>
            <param name="handle">A handle to an existing video card gamma table.</param>
            <returns>A new <see cref="T:lcmsNET.VideoCardGamma"/> instance referencing an existing video card gamma table.</returns>
        </member>
        <member name="M:lcmsNET.VideoCardGamma.#ctor(lcmsNET.ToneCurve,lcmsNET.ToneCurve,lcmsNET.ToneCurve)">
            <summary>
            Initialises a new instance of the <see cref="T:lcmsNET.VideoCardGamma"/> class.
            </summary>
            <param name="red">A tone curve for the red component.</param>
            <param name="green">A tone curve for the red component.</param>
            <param name="blue">A tone curve for the red component.</param>
        </member>
        <member name="P:lcmsNET.VideoCardGamma.Red">
            <summary>
            Gets the video card gamma table red tone curve.
            </summary>
        </member>
        <member name="P:lcmsNET.VideoCardGamma.Green">
            <summary>
            Gets the video card gamma table green tone curve.
            </summary>
        </member>
        <member name="P:lcmsNET.VideoCardGamma.Blue">
            <summary>
            Gets the video card gamma table blue tone curve.
            </summary>
        </member>
    </members>
</doc>
